--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.6) ~  Much Love, Ferib 

]]--

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 79) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v86 = v2(v0(v30, 16));
			if v19 then
				local v103 = v5(v86, v19);
				v19 = nil;
				return v103;
			else
				return v86;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v87 = (v31 / (((1275 - (226 + 1044)) - 3) ^ (v32 - (2 - (4 - 3))))) % (((118 - (32 + 85)) + 1) ^ (((v33 - 1) - (v32 - 1)) + (1 - 0)));
			return v87 - (v87 % (2 - 1));
		else
			local v88 = (621 - (555 + 64)) ^ (v32 - (1 - 0));
			return (((v31 % (v88 + v88)) >= v88) and ((914 + 18) - (857 + 74))) or (568 - (367 + 201));
		end
	end
	local function v21()
		local v34 = 0 + 0;
		local v35;
		while true do
			if (v34 == 0) then
				v35 = v1(v16, v18, v18);
				v18 = v18 + (958 - (892 + (120 - 55)));
				v34 = 1;
			end
			if (v34 == (2 - 1)) then
				return v35;
			end
		end
	end
	local function v22()
		local v36, v37 = v1(v16, v18, v18 + 2);
		v18 = v18 + (352 - (87 + 263));
		return (v37 * (469 - 213)) + v36;
	end
	local function v23()
		local v38, v39, v40, v41 = v1(v16, v18, v18 + 3 + 0);
		v18 = v18 + (9 - 5);
		return (v41 * (12338840 + 4438376)) + (v40 * (260471 - 194935)) + (v39 * 256) + v38;
	end
	local function v24()
		local v42 = v23();
		local v43 = v23();
		local v44 = 953 - (802 + 150);
		local v45 = (v20(v43, 2 - 1, (63 - 27) - 16) * ((2 + (438 - (145 + 293))) ^ 32)) + v42;
		local v46 = v20(v43, 1018 - (915 + (512 - (44 + 386))), 87 - (1542 - (998 + 488)));
		local v47 = ((v20(v43, 19 + (41 - 28)) == (1 - 0)) and -(1188 - (1069 + 118))) or (2 - 1);
		if (v46 == (0 - 0)) then
			if (v45 == 0) then
				return v47 * (0 + 0 + 0);
			else
				v46 = 1 + 0;
				v44 = 0;
			end
		elseif (v46 == ((2978 + 658) - 1589)) then
			return ((v45 == (0 + 0)) and (v47 * ((792 - (368 + 423)) / (0 - 0)))) or (v47 * NaN);
		end
		return v8(v47, v46 - ((1813 - (201 + 571)) - (10 + 8))) * (v44 + (v45 / (((1145 - (116 + 1022)) - 5) ^ (494 - (416 + 26)))));
	end
	local function v25(v48)
		local v49 = 0 + 0;
		local v50;
		local v51;
		while true do
			if (v49 == (12 - (775 - (745 + 21)))) then
				return v6(v51);
			end
			if (v49 == (1 + 0)) then
				v50 = v3(v16, v18, (v18 + v48) - (3 - 2));
				v18 = v18 + v48;
				v49 = 7 - 5;
			end
			if (v49 == (861 - (814 + 45))) then
				v51 = {};
				for v104 = 2 - 1, #v50 do
					v51[v104] = v2(v1(v3(v50, v104, v104)));
				end
				v49 = 2 + 1;
			end
			if (v49 == ((0 + 0) - 0)) then
				v50 = nil;
				if not v48 then
					v48 = v23();
					if (v48 == (1747 - (760 + 987))) then
						return "";
					end
				end
				v49 = 1 + 0;
			end
		end
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v52 = (function()
			return function(v89, v90, v91, v92, v93, v94, v95, v96)
				local v89 = (function()
					return 0;
				end)();
				local v90 = (function()
					return;
				end)();
				local v91 = (function()
					return;
				end)();
				while true do
					if (#"|" == v89) then
						if (v90 == #"]") then
							v91 = (function()
								return v92() ~= 0;
							end)();
						elseif (v90 == (1 + 1)) then
							v91 = (function()
								return v93();
							end)();
						elseif (v90 == #"xxx") then
							v91 = (function()
								return v94();
							end)();
						end
						v95[v96] = (function()
							return v91;
						end)();
						break;
					end
					if (v89 ~= 0) then
					else
						local v111 = (function()
							return 0;
						end)();
						local v112 = (function()
							return;
						end)();
						while true do
							if (v111 == (698 - (208 + 490))) then
								v112 = (function()
									return 0 + 0;
								end)();
								while true do
									if ((1 + 0) ~= v112) then
									else
										v89 = (function()
											return #" ";
										end)();
										break;
									end
									if ((836 - (660 + 176)) ~= v112) then
									else
										v90 = (function()
											return v92();
										end)();
										v91 = (function()
											return nil;
										end)();
										v112 = (function()
											return 1;
										end)();
									end
								end
								break;
							end
						end
					end
				end
				return v89, v90, v91, v92, v93, v94, v95, v96;
			end;
		end)();
		local v53 = (function()
			return function(v97, v98, v99)
				local v100 = (function()
					return 0 + 0;
				end)();
				while true do
					if (v100 == (0 - 0)) then
						v97[v98 - #"]"] = (function()
							return v99();
						end)();
						return v97, v98, v99;
					end
				end
			end;
		end)();
		local v54 = (function()
			return {};
		end)();
		local v55 = (function()
			return {};
		end)();
		local v56 = (function()
			return {};
		end)();
		local v57 = (function()
			return {v54,v55,nil,v56};
		end)();
		local v58 = (function()
			return v23();
		end)();
		local v59 = (function()
			return {};
		end)();
		for v67 = #"<", v58 do
			FlatIdent_1076E, Type, Cons, v21, v24, v25, v59, v67 = (function()
				return v52(FlatIdent_1076E, Type, Cons, v21, v24, v25, v59, v67);
			end)();
		end
		v57[#"91("] = (function()
			return v21();
		end)();
		for v68 = #" ", v23() do
			local v69 = (function()
				return 202 - (14 + 188);
			end)();
			local v70 = (function()
				return;
			end)();
			while true do
				if (v69 ~= (675 - (534 + 141))) then
				else
					v70 = (function()
						return v21();
					end)();
					if (v20(v70, #"!", #":") == (0 + 0)) then
						local v116 = (function()
							return 0;
						end)();
						local v117 = (function()
							return;
						end)();
						local v118 = (function()
							return;
						end)();
						local v119 = (function()
							return;
						end)();
						while true do
							if (v116 == 3) then
								if (v20(v118, #"nil", #"91(") == #"|") then
									v119[#".com"] = (function()
										return v59[v119[#".dev"]];
									end)();
								end
								v54[v68] = (function()
									return v119;
								end)();
								break;
							end
							if (v116 == (1 - 0)) then
								local v121 = (function()
									return 0;
								end)();
								while true do
									if (v121 == 0) then
										v119 = (function()
											return {v22(),v22(),nil,nil};
										end)();
										if (v117 == 0) then
											local v125 = (function()
												return 0 + 0;
											end)();
											local v126 = (function()
												return;
											end)();
											while true do
												if (v125 == 0) then
													v126 = (function()
														return 0 - 0;
													end)();
													while true do
														if (v126 == (0 - 0)) then
															v119[#"91("] = (function()
																return v22();
															end)();
															v119[#"?id="] = (function()
																return v22();
															end)();
															break;
														end
													end
													break;
												end
											end
										elseif (v117 == #":") then
											v119[#"91("] = (function()
												return v23();
											end)();
										elseif (v117 == (7 - 5)) then
											v119[#"xxx"] = (function()
												return v23() - (2 ^ (25 - 9));
											end)();
										elseif (v117 ~= #"gha") then
										else
											local v813 = (function()
												return 0 - 0;
											end)();
											local v814 = (function()
												return;
											end)();
											while true do
												if ((241 - (187 + 54)) ~= v813) then
												else
													v814 = (function()
														return 0 + 0;
													end)();
													while true do
														if (v814 ~= 0) then
														else
															v119[#"asd"] = (function()
																return v23() - ((2 + 0) ^ 16);
															end)();
															v119[#"http"] = (function()
																return v22();
															end)();
															break;
														end
													end
													break;
												end
											end
										end
										v121 = (function()
											return 1;
										end)();
									end
									if (v121 == 1) then
										v116 = (function()
											return 398 - (115 + 281);
										end)();
										break;
									end
								end
							end
							if (v116 ~= 2) then
							else
								if (v20(v118, #"[", #"~") == #"]") then
									v119[4 - 2] = (function()
										return v59[v119[3 - 1]];
									end)();
								end
								if (v20(v118, 2 + 0, 1 + 1) ~= #"~") then
								else
									v119[#"gha"] = (function()
										return v59[v119[#"91("]];
									end)();
								end
								v116 = (function()
									return 7 - 4;
								end)();
							end
							if (v116 == (1000 - (451 + 549))) then
								v117 = (function()
									return v20(v70, 1 + 1, #"xxx");
								end)();
								v118 = (function()
									return v20(v70, #"http", 21 - 15);
								end)();
								v116 = (function()
									return 1 - 0;
								end)();
							end
						end
					end
					break;
				end
			end
		end
		for v71 = #">", v23() do
			v55, v71, v28 = (function()
				return v53(v55, v71, v28);
			end)();
		end
		return v57;
	end
	local function v29(v61, v62, v63)
		local v64 = v61[1 - 0];
		local v65 = v61[1386 - (746 + 638)];
		local v66 = v61[2 + 1];
		return function(...)
			local v72 = v64;
			local v73 = v65;
			local v74 = v66;
			local v75 = v27;
			local v76 = 1 - 0;
			local v77 = -(342 - (218 + 123));
			local v78 = {};
			local v79 = {...};
			local v80 = v12("#", ...) - (1582 - (1535 + 46));
			local v81 = {};
			local v82 = {};
			for v101 = 0 + 0, v80 do
				if ((v101 >= v74) or (1890 <= 123)) then
					v78[v101 - v74] = v79[v101 + 1 + 0];
				else
					v82[v101] = v79[v101 + 1];
				end
			end
			local v83 = (v80 - v74) + (561 - (306 + 174 + 80));
			local v84;
			local v85;
			while true do
				local v102 = 0 + 0;
				while true do
					if (v102 == (0 - 0)) then
						v84 = v72[v76];
						v85 = v84[1468 - (899 + 568)];
						v102 = 1 + 0;
					end
					if (v102 == (2 - 1)) then
						if (v85 <= (639 - ((1932 - (674 + 990)) + 335))) then
							if ((v85 <= ((89 + 218) - (60 + 230))) or (1683 >= 3073)) then
								if (v85 <= (580 - (426 + 60 + 86))) then
									if ((v85 <= (1 + 2)) or (1922 >= 2669)) then
										if ((v85 <= (1 - 0)) or (130 == 3280)) then
											if (v85 > (1456 - (282 + 1174))) then
												if v82[v84[813 - (569 + 242)]] then
													v76 = v76 + (2 - 1);
												else
													v76 = v84[1 + 2];
												end
											else
												local v128 = v84[1026 - (706 + (1373 - (507 + 548)))];
												local v129 = {};
												for v634 = 1252 - (721 + 530), #v81 do
													local v635 = 1271 - (945 + 326);
													local v636;
													while true do
														if ((0 == v635) or (4930 <= 4189)) then
															v636 = v81[v634];
															for v1146 = 0 - 0, #v636 do
																local v1147 = v636[v1146];
																local v1148 = v1147[1];
																local v1149 = v1147[2 + 0];
																if ((v1148 == v82) and (v1149 >= v128)) then
																	local v1358 = 700 - ((1108 - (289 + 548)) + 429);
																	while true do
																		if ((1167 < 1489) and (v1358 == (0 + (1818 - (821 + 997))))) then
																			v129[v1149] = v1148[v1149];
																			v1147[1501 - (1408 + (347 - (195 + 60)))] = v129;
																			break;
																		end
																	end
																end
															end
															break;
														end
													end
												end
											end
										elseif (v85 > (1088 - (461 + 625))) then
											local v130 = 1288 - (993 + 295);
											local v131;
											while true do
												if (v130 == (0 + 0)) then
													v131 = v84[1173 - (418 + 753)];
													v82[v131](v82[v131 + 1 + 0]);
													break;
												end
											end
										else
											local v132;
											local v133;
											v133 = v84[1 + 1];
											v132 = v82[v84[1 + 0 + 2]];
											v82[v133 + 1 + (1501 - (251 + 1250))] = v132;
											v82[v133] = v132[v84[533 - (406 + (360 - 237))]];
											v76 = v76 + (1770 - (1749 + 14 + 6));
											v84 = v72[v76];
											v82[v84[1 + 1]] = v84[1325 - (1249 + (1105 - (809 + 223)))];
											v76 = v76 + 1;
											v84 = v72[v76];
											v133 = v84[1 + 1];
											v82[v133] = v82[v133](v13(v82, v133 + (1 - 0), v84[1148 - ((1399 - 933) + 679)]));
											v76 = v76 + 1;
											v84 = v72[v76];
											v82[v84[(13 - 9) - 2]] = v82[v84[3]][v84[11 - (6 + 1)]];
											v76 = v76 + (1901 - (106 + 1794));
											v84 = v72[v76];
											v133 = v84[1 + 1];
											v132 = v82[v84[1 + 2]];
											v82[v133 + (2 - 1)] = v132;
											v82[v133] = v132[v84[4]];
											v76 = v76 + (2 - 1);
											v84 = v72[v76];
											v133 = v84[(61 + 55) - (4 + 110)];
											v82[v133](v82[v133 + 1]);
											v76 = v76 + (585 - (57 + 527));
											v84 = v72[v76];
											v82[v84[(2046 - (14 + 603)) - (41 + 1386)]] = v63[v84[106 - (17 + 86)]];
											v76 = v76 + (130 - (118 + 11)) + 0;
											v84 = v72[v76];
											v133 = v84[3 - 1];
											v132 = v82[v84[(2 + 6) - 5]];
											v82[v133 + 1] = v132;
											v82[v133] = v132[v84[170 - (122 + 44)]];
											v76 = v76 + (1 - 0);
											v84 = v72[v76];
											v82[v84[6 - 4]] = v84[3];
											v76 = v76 + 1 + 0 + 0;
											v84 = v72[v76];
											v133 = v84[(2 - 1) + 1];
											v82[v133] = v82[v133](v13(v82, v133 + 1, v84[5 - 2]));
											v76 = v76 + (66 - (30 + 35));
											v84 = v72[v76];
											v82[v84[2 + 0]] = v82[v84[1260 - ((1992 - (551 + 398)) + 136 + 78)]][v84[4]];
											v76 = v76 + (3 - 2);
											v84 = v72[v76];
											v133 = v84[1214 - (323 + 889)];
											v132 = v82[v84[(3 + 4) - 4]];
											v82[v133 + (581 - (361 + 219))] = v132;
											v82[v133] = v132[v84[324 - (53 + 267)]];
											v76 = v76 + 1 + 0;
											v84 = v72[v76];
											v133 = v84[2];
											v82[v133](v82[v133 + ((337 + 77) - (15 + 398))]);
											v76 = v76 + (983 - (18 + (3585 - 2621)));
											v84 = v72[v76];
											v82[v84[2]] = v84[11 - 8];
											v76 = v76 + 1 + (0 - 0);
											v84 = v72[v76];
											v76 = v84[2 + 1];
										end
									elseif ((4056 >= 670) and (v85 <= (855 - (20 + 830)))) then
										if (v85 == (4 + 0)) then
											for v637 = v84[128 - (116 + 10)], v84[1 + 2] do
												v82[v637] = nil;
											end
										else
											local v167;
											local v168;
											v168 = v84[740 - (542 + 196)];
											v82[v168](v13(v82, v168 + (1 - 0), v84[1 + 2]));
											v76 = v76 + 1 + 0 + 0;
											v84 = v72[v76];
											v168 = v84[1 + 1];
											v167 = v82[v84[(27 - 20) - (2 + 2)]];
											v82[v168 + (2 - 1)] = v167;
											v82[v168] = v167[v84[4]];
											v76 = v76 + 1;
											v84 = v72[v76];
											v82[v84[1553 - ((1215 - (40 + 49)) + 425)]] = v84[3];
											v76 = v76 + (406 - (118 + 287));
											v84 = v72[v76];
											v82[v84[2]] = v84[11 - 8];
											v76 = v76 + (3 - 2);
											v84 = v72[v76];
											v82[v84[1123 - (118 + 1003)]] = v84[8 - 5];
											v76 = v76 + (378 - ((632 - (99 + 391)) + 235));
											v84 = v72[v76];
											v82[v84[9 - 7]] = v84[3];
										end
									elseif (v85 <= (2 + 4)) then
										local v183 = v84[979 - (458 + 95 + 424)];
										local v184 = v82[v84[3]];
										v82[v183 + ((4 - 3) - 0)] = v184;
										v82[v183] = v184[v84[4 + 0]];
									elseif (v85 == 7) then
										local v655;
										local v656;
										v656 = v84[2];
										v655 = v82[v84[3]];
										v82[v656 + 1 + (0 - 0)] = v655;
										v82[v656] = v655[v84[4]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[1 + 1]] = v84[2 + 1];
										v76 = v76 + (2 - 1);
										v84 = v72[v76];
										v656 = v84[5 - 3];
										v82[v656] = v82[v656](v13(v82, v656 + 1 + 0, v84[6 - 3]));
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[(23 - 14) - 7]] = v82[v84[3]][v84[4]];
										v76 = v76 + (754 - (239 + 514));
										v84 = v72[v76];
										v656 = v84[1 + 1];
										v655 = v82[v84[3]];
										v82[v656 + (1605 - (1032 + 572))] = v655;
										v82[v656] = v655[v84[4]];
										v76 = v76 + (1330 - (797 + 532));
										v84 = v72[v76];
										v656 = v84[2 + 0];
										v82[v656](v82[v656 + 1]);
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[4 - (419 - (203 + 214))]] = v63[v84[1205 - (373 + 829)]];
										v76 = v76 + (732 - ((2293 - (568 + 1249)) + 255));
										v84 = v72[v76];
										v82[v84[1132 - (369 + 761)]] = v84[2 + 1];
										v76 = v76 + 1;
										v84 = v72[v76];
										v656 = v84[2 - 0];
										v82[v656](v82[v656 + (1 - 0)]);
										v76 = v76 + (239 - (64 + 174));
										v84 = v72[v76];
										v76 = v84[1 + 2 + 0];
									else
										local v676;
										local v677;
										v677 = v84[2 - 0];
										v676 = v82[v84[339 - (144 + 192)]];
										v82[v677 + 1] = v676;
										v82[v677] = v676[v84[4]];
										v76 = v76 + (217 - (42 + 174));
										v84 = v72[v76];
										v82[v84[2 + 0]] = v84[3 + 0];
										v76 = v76 + (2 - 1) + 0;
										v84 = v72[v76];
										v677 = v84[1506 - (363 + (4407 - 3266))];
										v82[v677] = v82[v677](v13(v82, v677 + 1, v84[1583 - (1183 + (1703 - (913 + 393)))]));
										v76 = v76 + (2 - 1);
										v84 = v72[v76];
										v82[v84[2 + 0]] = v82[v84[3 + 0]][v84[1979 - (1913 + 62)]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v677 = v84[5 - 3];
										v676 = v82[v84[8 - 5]];
										v82[v677 + (1934 - (565 + 1368))] = v676;
										v82[v677] = v676[v84[(20 - 5) - 11]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v677 = v84[1663 - (1477 + 184)];
										v82[v677](v82[v677 + (1 - 0)]);
										v76 = v76 + 1;
										v84 = v72[v76];
										v76 = v84[3];
									end
								elseif (v85 <= (12 + 0)) then
									if (v85 <= (866 - (564 + (702 - (269 + 141))))) then
										if (v85 > (14 - 5)) then
											v82[v84[5 - 3]] = v63[v84[307 - ((542 - 298) + 60)]];
										elseif (v82[v84[2 + 0]] == v84[4]) then
											v76 = v76 + 1;
										else
											v76 = v84[479 - (41 + 435)];
										end
									elseif (v85 == (1012 - (938 + 63))) then
										local v190 = 0 + 0;
										local v191;
										local v192;
										while true do
											if (v190 == ((3108 - (362 + 1619)) - (936 + 189))) then
												v82[v192 + 1 + 0] = v191;
												v82[v192] = v191[v84[1617 - (1565 + 48)]];
												v76 = v76 + (1626 - (950 + 675)) + 0;
												v84 = v72[v76];
												v190 = 1141 - (782 + 356);
											end
											if (v190 == (271 - (176 + 91))) then
												v76 = v76 + 1 + 0;
												v84 = v72[v76];
												v82[v84[2]] = v84[7 - 4];
												v76 = v76 + (1 - 0);
												v190 = 1097 - (975 + (1296 - (216 + 963)));
											end
											if (v190 == 3) then
												v82[v84[1877 - ((1444 - (485 + 802)) + 1718)]] = v84[3 + 0];
												v76 = v76 + (3 - 2);
												v84 = v72[v76];
												v82[v84[6 - (563 - (432 + 127))]] = v84[3];
												v190 = 4;
											end
											if ((329 < 462) and (v190 == (1019 - (697 + 321)))) then
												v76 = v76 + (2 - 1);
												v84 = v72[v76];
												v192 = v84[3 - 1];
												v191 = v82[v84[6 - 3]];
												v190 = 1 + 1;
											end
											if (v190 == ((1082 - (1065 + 8)) - 4)) then
												v84 = v72[v76];
												v82[v84[5 - (2 + 1)]] = v84[1230 - (322 + 905)];
												break;
											end
											if (v190 == (611 - (602 + 9))) then
												v191 = nil;
												v192 = nil;
												v192 = v84[2];
												v82[v192](v13(v82, v192 + (1190 - (449 + 740)), v84[875 - (826 + 46)]));
												v190 = (2549 - (635 + 966)) - (177 + 68 + 702);
											end
										end
									else
										local v193;
										local v194;
										v194 = v84[6 - 4];
										v193 = v82[v84[1 + 2]];
										v82[v194 + (1899 - (260 + 1638))] = v193;
										v82[v194] = v193[v84[444 - (382 + 58)]];
										v76 = v76 + (3 - 2);
										v84 = v72[v76];
										v82[v84[2 + 0]] = v84[3];
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v194 = v84[5 - 3];
										v82[v194] = v82[v194](v13(v82, v194 + 1, v84[1208 - ((944 - (5 + 37)) + 303)]));
										v76 = v76 + (1 - (0 - 0));
										v84 = v72[v76];
										v82[v84[4 - 2]] = v82[v84[1 + 2]][v84[4]];
										v76 = v76 + (1691 - (1121 + 569));
										v84 = v72[v76];
										v194 = v84[216 - (22 + 192)];
										v193 = v82[v84[686 - (483 + 200)]];
										v82[v194 + (1464 - (1404 + 59))] = v193;
										v82[v194] = v193[v84[4]];
										v76 = v76 + (2 - 1);
										v84 = v72[v76];
										v194 = v84[2 - 0];
										v82[v194](v82[v194 + 1 + 0]);
										v76 = v76 + ((1212 - 446) - (468 + 297));
										v84 = v72[v76];
										v82[v84[(264 + 300) - (334 + 228)]] = v63[v84[10 - (14 - 7)]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v194 = v84[4 - (7 - 5)];
										v193 = v82[v84[3]];
										v82[v194 + (1 - 0)] = v193;
										v82[v194] = v193[v84[2 + 2]];
										v76 = v76 + (237 - (141 + (179 - 84)));
										v84 = v72[v76];
										v82[v84[(4 - 2) + 0]] = v84[7 - 4];
										v76 = v76 + ((2 + 0) - 1);
										v84 = v72[v76];
										v194 = v84[1 + 1];
										v82[v194] = v82[v194](v13(v82, v194 + (2 - 1), v84[3]));
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[2 + 0]] = v82[v84[(531 - (318 + 211)) + 1]][v84[5 - 1]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v194 = v84[165 - ((452 - 360) + 71)];
										v193 = v82[v84[2 + 1]];
										v82[v194 + (1 - 0)] = v193;
										v82[v194] = v193[v84[4]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v194 = v84[767 - (574 + 191)];
										v82[v194](v82[v194 + 1 + 0]);
										v76 = v76 + (2 - 1);
										v84 = v72[v76];
										v82[v84[2]] = v84[3];
									end
								elseif (v85 <= (1601 - (963 + 624))) then
									if ((3283 > 1085) and (v85 > (7 + 6))) then
										local v225 = 849 - (254 + 595);
										local v226;
										local v227;
										local v228;
										while true do
											if (v225 == 0) then
												v226 = v73[v84[129 - (55 + 71)]];
												v227 = nil;
												v225 = 1 - 0;
											end
											if ((v225 == (1791 - (573 + 1217))) or (759 > 4120)) then
												v228 = {};
												v227 = v10({}, {__index=function(v1131, v1132)
													local v1133 = v228[v1132];
													return v1133[2 - 1][v1133[2]];
												end,__newindex=function(v1134, v1135, v1136)
													local v1137 = v228[v1135];
													v1137[1 + 0][v1137[2 - 0]] = v1136;
												end});
												v225 = 941 - (714 + 225);
											end
											if (v225 == 2) then
												for v1139 = 2 - 1, v84[4] do
													local v1140 = 0 - 0;
													local v1141;
													while true do
														if (v1140 == 0) then
															v76 = v76 + 1;
															v1141 = v72[v76];
															v1140 = 1 + 0;
														end
														if (v1140 == 1) then
															if ((202 < 3063) and (v1141[1 - 0] == (822 - (118 + 688)))) then
																v228[v1139 - 1] = {v82,v1141[3]};
															else
																v228[v1139 - 1] = {v62,v1141[10 - 7]};
															end
															v81[#v81 + 1] = v228;
															break;
														end
													end
												end
												v82[v84[734 - (16 + 716)]] = v29(v226, v227, v63);
												break;
											end
										end
									else
										local v229 = 0;
										local v230;
										local v231;
										while true do
											if (v229 == (9 - 4)) then
												v82[v84[2]] = v84[3];
												v76 = v76 + 1;
												v84 = v72[v76];
												v231 = v84[99 - (11 + 86)];
												v82[v231] = v82[v231](v13(v82, v231 + 1, v84[6 - 3]));
												break;
											end
											if (v229 == (287 - (175 + 110))) then
												v82[v84[4 - 2]] = v84[14 - 11];
												v76 = v76 + 1;
												v84 = v72[v76];
												v82[v84[2]] = v84[1799 - (503 + 1293)];
												v76 = v76 + ((848 - (518 + 328)) - 1);
												v84 = v72[v76];
												v229 = 3 + 0;
											end
											if (((1064 - (810 + 251)) == v229) or (1603 > 4604)) then
												v82[v84[2 + 0]] = v63[v84[3]];
												v76 = v76 + 1 + (0 - 0);
												v84 = v72[v76];
												v82[v84[2]] = v82[v84[3 - 0]][v84[4 + (317 - (301 + 16))]];
												v76 = v76 + 1;
												v84 = v72[v76];
												v229 = 11 - 7;
											end
											if (v229 == 0) then
												v230 = nil;
												v231 = nil;
												v231 = v84[2];
												v82[v231](v13(v82, v231 + ((1499 - 965) - (43 + 490)), v84[736 - (711 + 22)]));
												v76 = v76 + (2 - 1);
												v84 = v72[v76];
												v229 = (3 + 0) - 2;
											end
											if (v229 == (860 - (240 + 619))) then
												v231 = v84[1 + 1 + 0];
												v230 = v82[v84[4 - 1]];
												v82[v231 + 1 + (0 - 0)] = v230;
												v82[v231] = v230[v84[1748 - (1344 + 400)]];
												v76 = v76 + (406 - (255 + 150));
												v84 = v72[v76];
												v229 = 2 + 0;
											end
											if ((3 + 1 + 0) == v229) then
												v82[v84[2]] = v84[12 - 9];
												v76 = v76 + ((1 + 2) - 2);
												v84 = v72[v76];
												v82[v84[2]] = v84[3];
												v76 = v76 + (1740 - (404 + 1335));
												v84 = v72[v76];
												v229 = 411 - (183 + 223);
											end
										end
									end
								elseif ((v85 <= 15) or (2592 <= 1594)) then
									local v232;
									v82[v84[2 - 0]] = v82[v84[2 + 1]][v84[2 + (6 - 4)]];
									v76 = v76 + (338 - (10 + 327));
									v84 = v72[v76];
									v82[v84[2]] = v82[v84[3]][v84[4]];
									v76 = v76 + 1 + 0 + 0;
									v84 = v72[v76];
									v82[v84[340 - (118 + 220)]] = v63[v84[1 + 2]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[451 - (108 + 341)]] = v82[v84[(1021 - (829 + 190)) + 1]][v84[16 - 12]];
									v76 = v76 + (1494 - (711 + 782));
									v84 = v72[v76];
									v82[v84[3 - 1]] = v63[v84[472 - (270 + 199)]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[1821 - (580 + 1239)]] = v82[v84[8 - 5]][v84[4 + 0]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[1 + 1]] = v63[v84[3]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[4 - 2]] = v82[v84[2 + 1]][v84[1171 - (645 + 522)]];
									v76 = v76 + (1791 - (1010 + 780));
									v84 = v72[v76];
									v82[v84[2 + 0]] = v63[v84[14 - 11]];
									v76 = v76 + (2 - 1);
									v84 = v72[v76];
									v82[v84[7 - 5]] = v82[v84[1839 - (1045 + 791)]][v84[9 - (6 - 1)]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v232 = v84[2];
									v82[v232] = v82[v232](v13(v82, v232 + (1 - 0), v84[4 - 1]));
									v76 = v76 + (506 - (351 + 154));
									v84 = v72[v76];
									v82[v84[1576 - ((3182 - 1901) + 70 + 223)]][v84[3]] = v82[v84[4]];
									v76 = v76 + (267 - (28 + 238));
									v84 = v72[v76];
									v82[v84[4 - 2]] = v62[v84[(511 + 1051) - (1381 + 178)]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[2 + 0]] = v82[v84[2 + 1]][v84[13 - 9]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[472 - (381 + 89)]] = v82[v84[3 + 0]][v84[3 + 1]];
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									v82[v84[1158 - (1074 + 82)]][v84[6 - 3]] = v84[4];
									v76 = v76 + (1785 - (214 + 1570));
									v84 = v72[v76];
									v82[v84[1457 - (990 + (1411 - 946))]] = v84[3];
								elseif (v85 > (7 + 9)) then
									local v695 = 0 + 0;
									while true do
										if (v695 == (4 + 0 + 0)) then
											v76 = v76 + ((616 - (520 + 93)) - 2);
											v84 = v72[v76];
											do
												return;
											end
											break;
										end
										if (v695 == (1729 - (1668 + 58))) then
											v82[v84[628 - (512 + 114)]] = v82[v84[7 - 4]][v84[8 - 4]];
											v76 = v76 + (3 - 2);
											v84 = v72[v76];
											v82[v84[1 + 1]][v84[1 + 2]] = v82[v84[4 + 0]];
											v695 = (289 - (259 + 17)) - 9;
										end
										if ((v695 == 0) or (2195 >= 4996)) then
											v82[v84[2]] = v63[v84[1997 - (109 + 1885)]];
											v76 = v76 + 1;
											v84 = v72[v76];
											v82[v84[(85 + 1386) - (1269 + 200)]] = v82[v84[5 - 2]][v84[819 - (98 + 717)]];
											v695 = 827 - (802 + 24);
										end
										if ((v695 == 1) or (930 <= 810)) then
											v76 = v76 + (1 - 0);
											v84 = v72[v76];
											v82[v84[2 - 0]] = v82[v84[1 + 2]][v84[4 + 0]];
											v76 = v76 + 1;
											v695 = 2;
										end
										if (2 == v695) then
											v84 = v72[v76];
											v82[v84[2]] = v82[v84[1 + 2]][v84[2 + 2]];
											v76 = v76 + 1 + 0;
											v84 = v72[v76];
											v695 = 8 - 5;
										end
									end
								else
									v82[v84[2]] = v82[v84[9 - 6]];
								end
							elseif (v85 <= (10 + 16)) then
								if ((v85 <= 21) or (4794 < 2698)) then
									if ((v85 <= ((26 - 18) + 11)) or (555 <= 551)) then
										if (v85 > (15 + 3)) then
											v82[v84[2 + 0]] = {};
										else
											local v267;
											local v268;
											v268 = v84[1 + 1];
											v82[v268](v13(v82, v268 + (1434 - (797 + 636)), v84[14 - 11]));
											v76 = v76 + (1620 - (1427 + 192));
											v84 = v72[v76];
											v268 = v84[1 + 1];
											v267 = v82[v84[3]];
											v82[v268 + (2 - 1)] = v267;
											v82[v268] = v267[v84[4]];
											v76 = v76 + 1 + 0;
											v84 = v72[v76];
											v82[v84[1 + 1]] = v84[3];
											v76 = v76 + (327 - (192 + 134));
											v84 = v72[v76];
											v82[v84[2]] = v84[3];
											v76 = v76 + (1277 - (316 + 960));
											v84 = v72[v76];
											v82[v84[593 - (396 + 195)]] = v63[v84[(5 - 3) + 1]];
											v76 = v76 + (1762 - (440 + 1321)) + 0;
											v84 = v72[v76];
											v82[v84[2]] = v82[v84[3 + 0]][v84[1833 - (1059 + 770)]];
											v76 = v76 + 1;
											v84 = v72[v76];
											v82[v84[2]] = v82[v84[3]][v84[(69 - 54) - 11]];
										end
									elseif ((261 < 3869) and (v85 == (571 - (83 + 468)))) then
										local v282 = v84[1808 - (1202 + 604)];
										local v283 = v84[18 - 14];
										local v284 = v282 + (2 - (545 - (424 + 121)));
										local v285 = {v82[v282](v82[v282 + (326 - (45 + 280))], v82[v284])};
										for v639 = 1 + 0, v283 do
											v82[v284 + v639] = v285[v639];
										end
										local v286 = v285[1 + (1347 - (641 + 706))];
										if v286 then
											v82[v284] = v286;
											v76 = v84[2 + 1];
										else
											v76 = v76 + 1 + 0;
										end
									else
										local v287;
										local v288;
										v288 = v84[1 + 1 + 0];
										v82[v288](v13(v82, v288 + ((441 - (249 + 191)) - (0 - 0)), v84[1914 - (340 + 1571)]));
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[2]] = v84[1775 - (1733 + 39)] ~= 0;
										v76 = v76 + 1;
										v84 = v72[v76];
										v288 = v84[5 - 3];
										v287 = v82[v84[1037 - (125 + 909)]];
										v82[v288 + (1949 - (1096 + 852))] = v287;
										v82[v288] = v287[v84[2 + 2]];
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v82[v84[1 + 1 + 0]] = v84[3];
										v76 = v76 + (513 - (409 + 103));
										v84 = v72[v76];
										v82[v84[238 - (46 + 190)]] = v84[98 - (51 + (169 - 125))];
									end
								elseif (v85 <= 23) then
									if ((v85 > 22) or (334 > 3050)) then
										local v301 = 0 + 0;
										local v302;
										local v303;
										while true do
											if ((3653 <= 4807) and (v301 == ((1749 - (183 + 244)) - (1114 + 203)))) then
												v82[v303](v82[v303 + 1]);
												v76 = v76 + (727 - (228 + 498));
												v84 = v72[v76];
												v82[v84[1 + 1]] = v63[v84[3]];
												v76 = v76 + 1 + 0 + 0;
												v301 = 669 - (174 + 489);
											end
											if ((3366 <= 3623) and (v301 == (10 - 6))) then
												v82[v303 + (1906 - (830 + (1805 - (434 + 296))))] = v302;
												v82[v303] = v302[v84[528 - (303 + 221)]];
												v76 = v76 + (1270 - (231 + 1038));
												v84 = v72[v76];
												v303 = v84[2 + 0];
												v301 = 5;
											end
											if ((v301 == (1165 - (171 + 991))) or (4624 == 1921)) then
												v82[v84[8 - 6]] = v82[v84[(21 - 14) - 4]][v84[4]];
												v76 = v76 + (2 - 1);
												v84 = v72[v76];
												v303 = v84[2 + 0];
												v302 = v82[v84[10 - 7]];
												v301 = 11 - 7;
											end
											if ((v301 == 8) or (2088 < 2014)) then
												v303 = v84[(514 - (169 + 343)) - 0];
												v82[v303] = v82[v303](v13(v82, v303 + (3 - 2), v84[3]));
												v76 = v76 + (1249 - (111 + 1137));
												v84 = v72[v76];
												v82[v84[160 - (91 + 67)]] = v82[v84[8 - 5]][v84[1 + 3]];
												v301 = 532 - (423 + 100);
											end
											if ((v301 == (1 + 5)) or (3297 > 4690)) then
												v84 = v72[v76];
												v303 = v84[5 - 3];
												v302 = v82[v84[2 + 1]];
												v82[v303 + (772 - (326 + 391 + 54))] = v302;
												v82[v303] = v302[v84[17 - 13]];
												v301 = 7;
											end
											if ((392 <= 3292) and ((0 - 0) == v301)) then
												v302 = nil;
												v303 = nil;
												v303 = v84[(6 - 2) - 2];
												v302 = v82[v84[714 - (530 + 181)]];
												v82[v303 + 1] = v302;
												v301 = 882 - (614 + 267);
											end
											if (7 == v301) then
												v76 = v76 + (33 - ((55 - 36) + 13));
												v84 = v72[v76];
												v82[v84[2 - 0]] = v84[(5 + 1) - 3];
												v76 = v76 + (2 - 1);
												v84 = v72[v76];
												v301 = 3 + 5;
											end
											if ((v301 == (1 - 0)) or (119 >= 4531)) then
												v82[v303] = v302[v84[7 - 3]];
												v76 = v76 + (1813 - ((3666 - 2373) + (1642 - (651 + 472))));
												v84 = v72[v76];
												v82[v84[3 - 1]] = v84[3];
												v76 = v76 + 1 + 0;
												v301 = 2;
											end
											if (v301 == (22 - 13)) then
												v76 = v76 + (1 - 0);
												v84 = v72[v76];
												v303 = v84[2];
												v302 = v82[v84[12 - 9]];
												v82[v303 + (2 - 1)] = v302;
												v301 = 10;
											end
											if (v301 == (6 + 4)) then
												v82[v303] = v302[v84[1 + 3]];
												v76 = v76 + (2 - 1);
												v84 = v72[v76];
												v303 = v84[1 + 1];
												v82[v303](v82[v303 + 1]);
												v301 = 4 + 4 + 3;
											end
											if (v301 == (7 + 4)) then
												v76 = v76 + (1097 - (709 + 387));
												v84 = v72[v76];
												v82[v84[1860 - (673 + 1185)]] = v84[(9 - 1) - 5];
												break;
											end
											if ((v301 == (6 - 4)) or (2475 > 3863)) then
												v84 = v72[v76];
												v303 = v84[2 - 0];
												v82[v303] = v82[v303](v13(v82, v303 + 1, v84[3 + 0]));
												v76 = v76 + 1 + 0;
												v84 = v72[v76];
												v301 = (486 - (397 + 86)) - 0;
											end
										end
									else
										local v304 = 0 + 0;
										local v305;
										local v306;
										while true do
											if (v304 == ((876 - (423 + 453)) - 0)) then
												v305 = nil;
												v306 = nil;
												v306 = v84[3 - 1];
												v305 = v82[v84[1883 - (446 + 1434)]];
												v304 = 1;
											end
											if (v304 == 6) then
												v306 = v84[1285 - (1040 + 243)];
												v82[v306](v82[v306 + (2 - 1)]);
												v76 = v76 + 1;
												v84 = v72[v76];
												v304 = 1854 - (559 + 1288);
											end
											if (v304 == 5) then
												v82[v306 + (1932 - (609 + 1322))] = v305;
												v82[v306] = v305[v84[4]];
												v76 = v76 + 1;
												v84 = v72[v76];
												v304 = 460 - (13 + 441);
											end
											if ((2189 >= 1725) and (v304 == 2)) then
												v82[v84[2]] = v84[10 - 7];
												v76 = v76 + 1;
												v84 = v72[v76];
												v306 = v84[5 - 3];
												v304 = 14 - 11;
											end
											if (v304 == (1 + 7)) then
												v76 = v76 + ((1 + 2) - 2);
												v84 = v72[v76];
												v306 = v84[1 + 1];
												v82[v306](v82[v306 + 1 + 0 + 0]);
												v304 = 26 - 17;
											end
											if (v304 == 1) then
												v82[v306 + 1 + 0] = v305;
												v82[v306] = v305[v84[7 - 3]];
												v76 = v76 + 1;
												v84 = v72[v76];
												v304 = 2 + 0;
											end
											if ((1717 < 3405) and (v304 == (3 + 1))) then
												v76 = v76 + 1 + 0 + 0;
												v84 = v72[v76];
												v306 = v84[2 + 0];
												v305 = v82[v84[3 + 0]];
												v304 = 438 - (153 + 280);
											end
											if ((19 - (10 + 2)) == v304) then
												v82[v84[2]] = v63[v84[3 + 0]];
												v76 = v76 + 1;
												v84 = v72[v76];
												v82[v84[1 + 1]] = v84[2 + 0 + 1];
												v304 = 8 + 0;
											end
											if ((7 + 2) == v304) then
												v76 = v76 + 1;
												v84 = v72[v76];
												v76 = v84[4 - 1];
												break;
											end
											if ((2 + (1191 - (50 + 1140))) == v304) then
												v82[v306] = v82[v306](v13(v82, v306 + (668 - (89 + 578)), v84[3]));
												v76 = v76 + 1 + 0 + 0;
												v84 = v72[v76];
												v82[v84[3 - 1]] = v82[v84[1052 - (572 + 477)]][v84[1 + 3]];
												v304 = 3 + 1;
											end
										end
									end
								elseif ((v85 <= (3 + 21)) or (118 == 1880)) then
									local v307 = 86 - (84 + 2);
									local v308;
									while true do
										if ((3232 > 1090) and (v307 == ((0 + 0) - 0))) then
											v308 = v84[2 + 0];
											v82[v308] = v82[v308](v13(v82, v308 + (843 - (497 + 345)), v84[1 + 2]));
											break;
										end
									end
								elseif ((3225 > 1844) and (v85 > (5 + 20))) then
									local v700 = 0;
									local v701;
									local v702;
									while true do
										if (v700 == (1333 - (605 + 728))) then
											v701 = nil;
											v702 = nil;
											v702 = v84[2 + 0];
											v700 = 1;
										end
										if ((v700 == ((1 + 0) - 0)) or (2722 >= 4773)) then
											v82[v702](v13(v82, v702 + (1 - 0) + 0, v84[10 - 7]));
											v76 = v76 + 1 + 0;
											v84 = v72[v76];
											v700 = 5 - 3;
										end
										if ((1751 > 383) and (v700 == (3 + 0 + 0))) then
											v702 = v84[491 - (457 + 32)];
											v701 = v82[v84[2 + 1]];
											v82[v702 + (1403 - (832 + 570))] = v701;
											v700 = (600 - (157 + 439)) + 0;
										end
										if (v700 == (2 + (2 - 0))) then
											v82[v702] = v701[v84[13 - 9]];
											v76 = v76 + 1;
											v84 = v72[v76];
											v700 = 3 + 2;
										end
										if (v700 == (798 - (588 + 208))) then
											v82[v84[5 - 3]] = v84[1803 - (884 + 916)] ~= (0 - 0);
											v76 = v76 + 1;
											v84 = v72[v76];
											v700 = (6 - 4) + 1;
										end
										if ((1264 < 4227) and (6 == v700)) then
											v82[v84[655 - (232 + (1245 - 824))]] = v84[1892 - (1569 + 320)];
											break;
										end
										if (v700 == (2 + (921 - (782 + 136)))) then
											v82[v84[1 + 1]] = v84[9 - 6];
											v76 = v76 + 1;
											v84 = v72[v76];
											v700 = 611 - (316 + 289);
										end
									end
								else
									local v703 = 0 - 0;
									local v704;
									local v705;
									while true do
										if ((1 + 12) == v703) then
											v84 = v72[v76];
											v705 = v84[2];
											v82[v705](v82[v705 + (1454 - ((1521 - (112 + 743)) + (1958 - (1026 + 145))))]);
											v76 = v76 + 1;
											v703 = 439 - (360 + 65);
										end
										if (v703 == (10 + 0)) then
											v705 = v84[256 - (14 + 65 + 175)];
											v82[v705] = v82[v705](v13(v82, v705 + ((719 - (493 + 225)) - 0), v84[3 + 0]));
											v76 = v76 + (2 - 1);
											v84 = v72[v76];
											v703 = 20 - 9;
										end
										if (v703 == (899 - (503 + 396))) then
											v704 = nil;
											v705 = nil;
											v705 = v84[183 - (92 + 89)];
											v704 = v82[v84[5 - (7 - 5)]];
											v703 = 1 + 0;
										end
										if (v703 == (7 + 4)) then
											v82[v84[2 + 0]] = v82[v84[11 - (21 - 13)]][v84[1 + 3]];
											v76 = v76 + (2 - (1 + 0));
											v84 = v72[v76];
											v705 = v84[2];
											v703 = 11 + 1;
										end
										if ((964 == 964) and (v703 == (4 + 4))) then
											v704 = v82[v84[8 - 5]];
											v82[v705 + (2 - 1) + 0] = v704;
											v82[v705] = v704[v84[4]];
											v76 = v76 + (1 - 0);
											v703 = 1253 - (485 + 759);
										end
										if (v703 == ((6 + 14) - 11)) then
											v84 = v72[v76];
											v82[v84[1191 - (442 + 747)]] = v84[3];
											v76 = v76 + ((1897 - 761) - (832 + 303));
											v84 = v72[v76];
											v703 = 956 - (88 + 858);
										end
										if (v703 == (2 + 3)) then
											v82[v705 + 1] = v704;
											v82[v705] = v704[v84[4 + 0]];
											v76 = v76 + 1;
											v84 = v72[v76];
											v703 = 1 + 5;
										end
										if (v703 == 2) then
											v82[v84[(2386 - (210 + 1385)) - (766 + 23)]] = v84[3];
											v76 = v76 + (4 - 3);
											v84 = v72[v76];
											v705 = v84[2];
											v703 = 3 - 0;
										end
										if (v703 == (15 - 9)) then
											v705 = v84[6 - 4];
											v82[v705](v82[v705 + (1074 - (1036 + 37))]);
											v76 = v76 + 1;
											v84 = v72[v76];
											v703 = 5 + 2;
										end
										if ((v703 == (26 - 12)) or (4597 == 2726)) then
											v84 = v72[v76];
											v82[v84[2 + 0]] = v84[1483 - (641 + 839)];
											break;
										end
										if ((v703 == (917 - (910 + 3))) or (4308 == 4623)) then
											v76 = v76 + (2 - 1);
											v84 = v72[v76];
											v705 = v84[1686 - ((3155 - (1201 + 488)) + 218)];
											v704 = v82[v84[2 + 1]];
											v703 = 1153 - (556 + 592);
										end
										if ((2249 > 546) and (v703 == 3)) then
											v82[v705] = v82[v705](v13(v82, v705 + 1 + 0, v84[811 - (329 + 297 + 182)]));
											v76 = v76 + 1;
											v84 = v72[v76];
											v82[v84[(1522 - 666) - (174 + 680)]] = v82[v84[10 - 7]][v84[8 - 4]];
											v703 = 3 + 1;
										end
										if (7 == v703) then
											v82[v84[741 - (396 + 343)]] = v63[v84[1 + 2]];
											v76 = v76 + (1478 - (29 + 1448));
											v84 = v72[v76];
											v705 = v84[1391 - (135 + (2248 - 994))];
											v703 = 30 - (607 - (352 + 233));
										end
										if ((2704 <= 3641) and (v703 == (55 - 43))) then
											v704 = v82[v84[2 + 1]];
											v82[v705 + ((3692 - 2164) - (389 + 1138))] = v704;
											v82[v705] = v704[v84[578 - (102 + 257 + 215)]];
											v76 = v76 + 1 + 0;
											v703 = 13;
										end
										if ((v703 == (1 + 0)) or (4277 <= 1396)) then
											v82[v705 + (2 - 1) + 0] = v704;
											v82[v705] = v704[v84[1549 - (320 + 1225)]];
											v76 = v76 + (1 - 0);
											v84 = v72[v76];
											v703 = 2 + 0;
										end
									end
								end
							elseif (v85 <= 31) then
								if (v85 <= 28) then
									if (v85 > (1491 - (157 + 1307))) then
										local v309;
										local v310;
										local v311;
										v311 = v84[2];
										v82[v311](v13(v82, v311 + (1860 - (821 + 1038)), v84[7 - 4]));
										v76 = v76 + (575 - (489 + 85)) + 0;
										v84 = v72[v76];
										v311 = v84[3 - 1];
										v310 = v82[v84[2 + 1]];
										v82[v311 + (2 - 1)] = v310;
										v82[v311] = v310[v84[1030 - (834 + 192)]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[1 + 1]] = v84[3];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[2 - 0]] = v84[307 - ((1801 - (277 + 1224)) + 4)];
										v76 = v76 + (1494 - (663 + 830));
										v84 = v72[v76];
										v82[v84[2]] = {};
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[5 - 3]] = v84[365 - (99 + 13 + 250)];
										v76 = v76 + 1 + (0 - 0);
										v84 = v72[v76];
										v82[v84[2]] = v84[3];
										v76 = v76 + (2 - 1);
										v84 = v72[v76];
										v82[v84[2 + 0]] = v84[(877 - (461 + 414)) + 1 + 0];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v311 = v84[1 + 1];
										v309 = v82[v311];
										v310 = v84[3 + 0];
										for v642 = 1415 - (1001 + 413), v310 do
											v309[v642] = v82[v311 + v642];
										end
									else
										v82[v84[4 - 2]] = v29(v73[v84[(355 + 530) - (244 + 638)]], nil, v63);
									end
								elseif (v85 <= (722 - (627 + 66))) then
									v82[v84[2]][v84[8 - 5]] = v82[v84[606 - (512 + 90)]];
								elseif (v85 == (1936 - (1665 + 241))) then
									local v706 = 717 - (373 + 344);
									local v707;
									local v708;
									while true do
										if ((v706 == (1 + 0 + 0)) or (4180 <= 366)) then
											v82[v708](v13(v82, v708 + 1 + 0, v84[7 - 4]));
											v76 = v76 + 1;
											v84 = v72[v76];
											v706 = 2 - 0;
										end
										if (v706 == (1105 - (35 + 1064))) then
											v82[v84[2]] = v84[3 + 0];
											break;
										end
										if (v706 == 4) then
											v82[v708] = v707[v84[8 - 4]];
											v76 = v76 + 1 + 0;
											v84 = v72[v76];
											v706 = 1241 - (298 + 938);
										end
										if ((v706 == ((1244 + 17) - (233 + 1026))) or (149 >= 4486)) then
											v82[v84[1668 - (636 + 1030)]] = v84[2 + 1] ~= 0;
											v76 = v76 + (251 - (172 + 78)) + (0 - 0);
											v84 = v72[v76];
											v706 = 1 + 2;
										end
										if (5 == v706) then
											v82[v84[1 + 1]] = v84[224 - (55 + 62 + 104)];
											v76 = v76 + 1;
											v84 = v72[v76];
											v706 = 2 + 4;
										end
										if (v706 == (0 - 0)) then
											v707 = nil;
											v708 = nil;
											v708 = v84[1 + 1];
											v706 = 1;
										end
										if ((646 < 1037) and (v706 == ((3 + 8) - 8))) then
											v708 = v84[299 - (36 + 261)];
											v707 = v82[v84[4 - 1]];
											v82[v708 + 1] = v707;
											v706 = (459 + 913) - (34 + 1334);
										end
									end
								else
									local v709 = 0 + 0;
									local v710;
									local v711;
									while true do
										if (v709 == (4 + 1)) then
											v76 = v76 + (1284 - (1035 + 248));
											v84 = v72[v76];
											v711 = v84[23 - (20 + (1 - 0))];
											v82[v711] = v82[v711](v82[v711 + 1 + 0]);
											v76 = v76 + 1;
											v709 = 325 - (134 + 185);
										end
										if ((3598 <= 3738) and (v709 == 2)) then
											v84 = v72[v76];
											v82[v84[1135 - ((690 - 141) + 584)]] = v84[688 - (314 + 371)];
											v76 = v76 + ((1 + 2) - 2);
											v84 = v72[v76];
											v711 = v84[970 - (478 + 271 + 219)];
											v709 = 2 + 1;
										end
										if (v709 == (1173 - (786 + 386))) then
											v711 = v84[(3 + 3) - 4];
											v710 = v82[v84[1382 - (1055 + 324)]];
											v82[v711 + (1341 - (1093 + 247))] = v710;
											v82[v711] = v710[v84[4 + 0]];
											v76 = v76 + 1 + 0;
											v709 = 7 - 5;
										end
										if (v709 == 3) then
											v82[v711] = v82[v711](v13(v82, v711 + (3 - 2), v84[8 - 5]));
											v76 = v76 + (2 - 1);
											v84 = v72[v76];
											v82[v84[1 + 1]] = v82[v84[11 - 8]][v84[13 - 9]];
											v76 = v76 + 1 + 0;
											v709 = 4;
										end
										if (v709 == ((59 - 44) - 9)) then
											v84 = v72[v76];
											v82[v84[690 - (364 + 324)]] = v82[v84[(15 - 8) - 4]];
											v76 = v76 + (2 - 1);
											v84 = v72[v76];
											do
												return;
											end
											break;
										end
										if (v709 == (0 + 0)) then
											v710 = nil;
											v711 = nil;
											v82[v84[(3 + 5) - 6]] = v63[v84[4 - 1]];
											v76 = v76 + (2 - 1);
											v84 = v72[v76];
											v709 = 1 + 0;
										end
										if (v709 == ((1719 - (133 + 314)) - (1249 + 4 + 15))) then
											v84 = v72[v76];
											v711 = v84[(215 - (199 + 14)) + 0];
											v710 = v82[v84[11 - (28 - 20)]];
											v82[v711 + (1087 - (686 + 400))] = v710;
											v82[v711] = v710[v84[4]];
											v709 = 5;
										end
									end
								end
							elseif (v85 <= ((1575 - (647 + 902)) + 7)) then
								if (v85 == ((784 - 523) - (73 + 156))) then
									local v333 = v84[1 + 1];
									v82[v333] = v82[v333]();
								else
									local v335 = v84[813 - (721 + 90)];
									v82[v335] = v82[v335](v82[v335 + 1 + 0]);
								end
							elseif ((v85 <= 34) or (823 >= 915)) then
								local v337;
								local v338;
								local v339;
								local v340;
								v82[v84[6 - 4]] = v63[v84[473 - (224 + 246)]];
								v76 = v76 + 1;
								v84 = v72[v76];
								v340 = v84[2 - 0];
								v339 = v82[v84[5 - 2]];
								v82[v340 + (234 - (85 + 148)) + 0] = v339;
								v82[v340] = v339[v84[1 + 3]];
								v76 = v76 + (1290 - (426 + 863)) + 0;
								v84 = v72[v76];
								v82[v84[3 - 1]] = v84[3];
								v76 = v76 + (3 - (9 - 7));
								v84 = v72[v76];
								v340 = v84[2];
								v82[v340] = v82[v340](v13(v82, v340 + ((2168 - (873 + 781)) - ((271 - 68) + 310)), v84[1996 - ((3343 - 2105) + 755)]));
								v76 = v76 + 1 + 0;
								v84 = v72[v76];
								v340 = v84[1536 - (709 + 825)];
								v339 = v82[v84[4 - 1]];
								v82[v340 + (1 - 0)] = v339;
								v82[v340] = v339[v84[868 - (196 + 668)]];
								v76 = v76 + (3 - 2);
								v84 = v72[v76];
								v340 = v84[3 - 1];
								v338 = {v82[v340](v82[v340 + 1])};
								v337 = (346 + 487) - (171 + 662);
								for v645 = v340, v84[97 - (4 + 89)] do
									v337 = v337 + 1;
									v82[v645] = v338[v337];
								end
								v76 = v76 + (3 - 2);
								v84 = v72[v76];
								v76 = v84[2 + 1];
							elseif (v85 > (153 - 118)) then
								local v712 = 0 + 0;
								local v713;
								while true do
									if (v712 == ((5489 - 4003) - (35 + 1451))) then
										v713 = v84[2];
										v82[v713] = v82[v713](v13(v82, v713 + (1454 - (28 + 1425)), v77));
										break;
									end
								end
							else
								v82[v84[1995 - (941 + 1052)]] = v62[v84[3 + 0]];
							end
						elseif (v85 <= (1568 - (822 + 692))) then
							if (v85 <= 45) then
								if (v85 <= (57 - 17)) then
									if (v85 <= (18 + 20)) then
										if (v85 == (334 - (45 + 252))) then
											local v358;
											local v359;
											v359 = v84[2 + 0];
											v358 = v82[v84[2 + 1]];
											v82[v359 + (2 - (1 - 0))] = v358;
											v82[v359] = v358[v84[4]];
											v76 = v76 + ((1288 - 854) - (114 + 319));
											v84 = v72[v76];
											v82[v84[2 - 0]] = v84[3 - 0];
											v76 = v76 + (1948 - (414 + 1533)) + 0;
											v84 = v72[v76];
											v359 = v84[2 - 0];
											v82[v359] = v82[v359](v13(v82, v359 + (1 - 0), v84[3]));
											v76 = v76 + (1964 - (483 + 73 + 1407));
											v84 = v72[v76];
											v82[v84[1208 - (741 + 465)]] = v82[v84[468 - (170 + 295)]][v84[3 + (556 - (443 + 112))]];
											v76 = v76 + 1 + 0;
											v84 = v72[v76];
											v359 = v84[4 - 2];
											v358 = v82[v84[3 + 0]];
											v82[v359 + 1 + 0] = v358;
											v82[v359] = v358[v84[4]];
										else
											local v374;
											local v375;
											v375 = v84[2 + (1479 - (888 + 591))];
											v374 = v82[v84[3]];
											v82[v375 + (1231 - (957 + (705 - 432)))] = v374;
											v82[v375] = v374[v84[2 + 2]];
											v76 = v76 + 1 + 0 + 0;
											v84 = v72[v76];
											v82[v84[7 - 5]] = v84[7 - 4];
											v76 = v76 + (2 - 1);
											v84 = v72[v76];
											v375 = v84[2];
											v82[v375] = v82[v375](v13(v82, v375 + (4 - 3), v84[1783 - (389 + 1391)]));
											v76 = v76 + 1 + 0;
											v84 = v72[v76];
											v82[v84[1 + (3 - 2)]] = v82[v84[6 - 3]][v84[4]];
											v76 = v76 + 1 + 0;
											v84 = v72[v76];
											v375 = v84[953 - (783 + 168)];
											v374 = v82[v84[9 - 6]];
											v82[v375 + 1 + 0] = v374;
											v82[v375] = v374[v84[315 - (309 + 2)]];
											v76 = v76 + (2 - 1);
											v84 = v72[v76];
											v375 = v84[1214 - (1090 + 122)];
											v82[v375](v82[v375 + 1]);
											v76 = v76 + 1 + 0 + 0;
											v84 = v72[v76];
											v82[v84[6 - 4]] = v63[v84[3 + 0]];
											v76 = v76 + (1119 - (628 + 53 + 437));
											v84 = v72[v76];
											v375 = v84[1 + 1];
											v374 = v82[v84[7 - 4]];
											v82[v375 + (4 - 3)] = v374;
											v82[v375] = v374[v84[778 - (431 + 343)]];
											v76 = v76 + 1;
											v84 = v72[v76];
											v82[v84[3 - 1]] = v84[8 - 5];
											v76 = v76 + 1 + 0;
											v84 = v72[v76];
											v375 = v84[1 + 1];
											v82[v375] = v82[v375](v13(v82, v375 + 1, v84[1698 - (556 + 1139)]));
											v76 = v76 + (16 - (6 + 9));
											v84 = v72[v76];
											v82[v84[1 + 1]] = v82[v84[2 + 1]][v84[173 - (28 + 141)]];
											v76 = v76 + 1;
											v84 = v72[v76];
											v375 = v84[2];
											v374 = v82[v84[2 + 1]];
											v82[v375 + (1 - (0 - 0))] = v374;
											v82[v375] = v374[v84[4]];
											v76 = v76 + 1 + 0;
											v84 = v72[v76];
											v375 = v84[1319 - (486 + (1539 - 708))];
											v82[v375](v82[v375 + (2 - 1)]);
											v76 = v76 + (3 - 2);
											v84 = v72[v76];
											v82[v84[1 + 1]] = v84[3];
										end
									elseif (v85 > (123 - 84)) then
										local v407;
										local v408;
										v408 = v84[1265 - (668 + 595)];
										v407 = v82[v84[3]];
										v82[v408 + (1679 - (136 + 1542)) + 0] = v407;
										v82[v408] = v407[v84[4]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[5 - 3]] = v84[3];
										v76 = v76 + 1;
										v84 = v72[v76];
										v408 = v84[292 - (23 + 267)];
										v82[v408] = v82[v408](v13(v82, v408 + (1945 - (1129 + 815)), v84[390 - (371 + 16)]));
										v76 = v76 + (1751 - ((4348 - 3022) + 421 + 3));
										v84 = v72[v76];
										v82[v84[3 - 1]] = v82[v84[10 - 7]][v84[122 - (88 + 30)]];
										v76 = v76 + (772 - (720 + 51));
										v84 = v72[v76];
										v408 = v84[4 - (2 - 0)];
										v407 = v82[v84[(1288 + 491) - (421 + 1355)]];
										v82[v408 + (1 - 0)] = v407;
										v82[v408] = v407[v84[2 + 2]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v408 = v84[1085 - (286 + 797)];
										v82[v408](v82[v408 + 1]);
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[7 - 5]] = v63[v84[4 - 1]];
										v76 = v76 + (440 - (397 + 42));
										v84 = v72[v76];
										v82[v84[1 + 1]] = v84[803 - (24 + 776)];
										v76 = v76 + 1;
										v84 = v72[v76];
										v408 = v84[2];
										v82[v408](v82[v408 + 1]);
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v76 = v84[3];
									else
										local v430;
										local v431;
										v431 = v84[787 - ((708 - (68 + 418)) + 563)];
										v430 = v82[v84[6 - 3]];
										v82[v431 + (2 - 1) + (0 - 0)] = v430;
										v82[v431] = v430[v84[194 - (23 + 167)]];
										v76 = v76 + (1799 - (690 + 1108));
										v84 = v72[v76];
										v82[v84[2]] = v84[3];
										v76 = v76 + 1;
										v84 = v72[v76];
										v431 = v84[1 + 1];
										v82[v431] = v82[v431](v13(v82, v431 + 1 + 0 + 0, v84[851 - (40 + 808)]));
										v76 = v76 + (1093 - (770 + 322)) + 0;
										v84 = v72[v76];
										v82[v84[7 - (1 + 4)]] = v82[v84[3 + 0]][v84[1 + 2 + 1]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v431 = v84[573 - (47 + 524)];
										v430 = v82[v84[3]];
										v82[v431 + 1] = v430;
										v82[v431] = v430[v84[3 + 1]];
										v76 = v76 + ((1 + 1) - 1);
										v84 = v72[v76];
										v431 = v84[(2 - 0) - (0 - 0)];
										v82[v431](v82[v431 + (2 - 1)]);
										v76 = v76 + ((4703 - 2976) - (1165 + 561));
										v84 = v72[v76];
										v82[v84[1 + 1]] = v63[v84[9 - 6]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v431 = v84[7 - 5];
										v430 = v82[v84[(269 + 213) - (341 + 138)]];
										v82[v431 + 1 + 0] = v430;
										v82[v431] = v430[v84[7 - 3]];
										v76 = v76 + (327 - (89 + 237));
										v84 = v72[v76];
										v82[v84[2]] = v84[9 - 6];
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v431 = v84[(1322 - 439) - (581 + 300)];
										v82[v431] = v82[v431](v13(v82, v431 + (1221 - (855 + 365)), v84[6 - 3]));
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[1 + 1]] = v82[v84[1238 - (1030 + 205)]][v84[4 + 0]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v431 = v84[288 - (156 + 130)];
										v430 = v82[v84[6 - 3]];
										v82[v431 + (1 - 0)] = v430;
										v82[v431] = v430[v84[4]];
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v431 = v84[1 + 1];
										v82[v431](v82[v431 + 1 + 0]);
										v76 = v76 + (70 - (10 + 29 + 30));
										v84 = v72[v76];
										v82[v84[1 + 1]] = v84[(9 + 5) - 11];
									end
								elseif ((v85 <= 42) or (4962 <= 4365)) then
									if (v85 > (1204 - (671 + 492))) then
										v62[v84[3]] = v82[v84[2 + 0]];
									elseif (v84[1217 - (369 + 846)] == v82[v84[2 + 2]]) then
										v76 = v76 + 1;
									else
										v76 = v84[3 + 0];
									end
								elseif (v85 <= 43) then
									v76 = v84[3 + (0 - 0)];
								elseif (v85 == (1989 - (1036 + 909))) then
									local v717 = 0 + (0 - 0);
									while true do
										if (v717 == (2 - 0)) then
											v84 = v72[v76];
											v82[v84[(70 + 135) - (11 + 192)]] = v84[(9 - 7) + (3 - 2)];
											v76 = v76 + (176 - (135 + 40));
											v84 = v72[v76];
											v717 = 6 - 3;
										end
										if (v717 == (1 + 0)) then
											v76 = v76 + (2 - (1 + 0));
											v84 = v72[v76];
											v82[v84[2 - 0]][v84[3]] = v84[180 - (50 + 126)];
											v76 = v76 + ((9 - 7) - 1);
											v717 = 2;
										end
										if ((v717 == 3) or (643 >= 1489)) then
											v76 = v84[1 + 2];
											break;
										end
										if (v717 == 0) then
											v82[v84[1415 - (1233 + 180)]][v84[3]] = v82[v84[973 - (522 + 447)]];
											v76 = v76 + (1422 - (107 + 1314));
											v84 = v72[v76];
											v82[v84[2]] = v63[v84[3]];
											v717 = 1 + 0;
										end
									end
								else
									local v718 = (831 - (762 + 69)) - 0;
									local v719;
									local v720;
									while true do
										if (v718 == (1 + 1)) then
											v84 = v72[v76];
											v720 = v84[2];
											v82[v720] = v82[v720](v13(v82, v720 + (1 - 0), v84[11 - 8]));
											v76 = v76 + (1911 - (716 + 1194));
											v84 = v72[v76];
											v718 = 3;
										end
										if (11 == v718) then
											v76 = v76 + 1;
											v84 = v72[v76];
											v82[v84[1 + 1]] = v84[3];
											break;
										end
										if ((2 + 8) == v718) then
											v82[v720] = v719[v84[507 - (74 + 429)]];
											v76 = v76 + (1 - 0);
											v84 = v72[v76];
											v720 = v84[1 + 1];
											v82[v720](v82[v720 + (2 - 1)]);
											v718 = 8 + 3;
										end
										if (v718 == (24 - 16)) then
											v720 = v84[2];
											v82[v720] = v82[v720](v13(v82, v720 + 1, v84[7 - 4]));
											v76 = v76 + (434 - (279 + 154));
											v84 = v72[v76];
											v82[v84[2]] = v82[v84[3]][v84[782 - (454 + 324)]];
											v718 = (25 - 17) + 1;
										end
										if (v718 == 0) then
											v719 = nil;
											v720 = nil;
											v720 = v84[19 - (12 + 5)];
											v719 = v82[v84[2 + 1]];
											v82[v720 + (2 - 1)] = v719;
											v718 = 1 + 0 + 0;
										end
										if (v718 == (1102 - (277 + 816))) then
											v76 = v76 + 1 + 0;
											v84 = v72[v76];
											v720 = v84[8 - 6];
											v719 = v82[v84[1186 - (1058 + 125)]];
											v82[v720 + 1 + 0] = v719;
											v718 = 985 - (815 + 160);
										end
										if ((25 - 19) == v718) then
											v84 = v72[v76];
											v720 = v84[4 - 2];
											v719 = v82[v84[(2 - 1) + 2]];
											v82[v720 + (2 - 1)] = v719;
											v82[v720] = v719[v84[(599 + 1303) - (41 + 1857)]];
											v718 = 1900 - (20 + 1202 + 671);
										end
										if (v718 == (10 - 6)) then
											v82[v720 + (1 - 0)] = v719;
											v82[v720] = v719[v84[1186 - (229 + 953)]];
											v76 = v76 + (3 - 2);
											v84 = v72[v76];
											v720 = v84[(1933 - (8 + 149)) - (1111 + 663)];
											v718 = 1584 - (874 + (2025 - (1199 + 121)));
										end
										if (v718 == (1 + 4)) then
											v82[v720](v82[v720 + 1 + 0]);
											v76 = v76 + ((1 - 0) - 0);
											v84 = v72[v76];
											v82[v84[1 + 1]] = v63[v84[6 - 3]];
											v76 = v76 + (680 - (642 + 37));
											v718 = 2 + 4;
										end
										if ((v718 == (1 + 0)) or (475 == 4175)) then
											v82[v720] = v719[v84[4]];
											v76 = v76 + (2 - 1);
											v84 = v72[v76];
											v82[v84[456 - (233 + 221)]] = v84[6 - 3];
											v76 = v76 + 1 + 0 + 0;
											v718 = (5507 - 3964) - (718 + 823);
										end
										if (v718 == (5 + 2)) then
											v76 = v76 + (806 - (266 + 539));
											v84 = v72[v76];
											v82[v84[2]] = v84[8 - 5];
											v76 = v76 + 1;
											v84 = v72[v76];
											v718 = 1233 - (636 + (1366 - 777));
										end
										if (v718 == (6 - 3)) then
											v82[v84[3 - 1]] = v82[v84[3 + 0]][v84[2 + 2]];
											v76 = v76 + (1016 - (657 + 358));
											v84 = v72[v76];
											v720 = v84[4 - 2];
											v719 = v82[v84[(6 + 0) - 3]];
											v718 = 1191 - (1151 + 36);
										end
									end
								end
							elseif (v85 <= 49) then
								if ((v85 <= (46 + (1808 - (518 + 1289)))) or (2786 < 121)) then
									if (v85 == (13 + 33)) then
										local v464;
										local v465;
										v465 = v84[2];
										v82[v465](v13(v82, v465 + 1, v84[8 - 5]));
										v76 = v76 + (1833 - (1552 + 280));
										v84 = v72[v76];
										v82[v84[2]] = v84[(1435 - 598) - (9 + 55 + 770)] ~= (0 + 0);
										v76 = v76 + 1;
										v84 = v72[v76];
										v465 = v84[4 - 2];
										v464 = v82[v84[1 + 2]];
										v82[v465 + (1244 - (157 + 1086))] = v464;
										v82[v465] = v464[v84[7 - 3]];
										v76 = v76 + ((5 - 1) - 3);
										v84 = v72[v76];
										v82[v84[2]] = v84[3 - 0];
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v82[v84[821 - (599 + 220)]] = v84[5 - 2];
									elseif (v82[v84[1933 - (1813 + 118)]] ~= v82[v84[3 + 1]]) then
										v76 = v76 + 1;
									else
										v76 = v84[1220 - (841 + 376)];
									end
								elseif (v85 == 48) then
									local v477;
									local v478, v479;
									local v480;
									local v481;
									v82[v84[2 - (0 + 0)]] = v63[v84[1 + 2]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[2]] = v63[v84[8 - 5]];
									v76 = v76 + (860 - (464 + 395));
									v84 = v72[v76];
									v481 = v84[5 - 3];
									v480 = v82[v84[2 + (470 - (304 + 165))]];
									v82[v481 + (838 - (441 + 26 + 370))] = v480;
									v82[v481] = v480[v84[8 - 4]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[6 - 4]] = v84[1 + 2];
									v76 = v76 + (2 - 1);
									v84 = v72[v76];
									v481 = v84[522 - (150 + 370)];
									v478, v479 = v75(v82[v481](v13(v82, v481 + (1283 - (74 + 1208)), v84[7 - (164 - (54 + 106))])));
									v77 = (v479 + v481) - (4 - 3);
									v477 = 0 + 0;
									for v648 = v481, v77 do
										v477 = v477 + ((2360 - (1618 + 351)) - (14 + 376));
										v82[v648] = v478[v477];
									end
									v76 = v76 + (1 - (0 + 0));
									v84 = v72[v76];
									v481 = v84[2 + 0];
									v82[v481] = v82[v481](v13(v82, v481 + 1, v77));
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v481 = v84[2 + 0];
									v82[v481] = v82[v481]();
									v76 = v76 + (2 - 1);
									v84 = v72[v76];
									v82[v84[2 + 0]] = v82[v84[81 - (23 + 55)]][v84[9 - 5]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[2 + 0]] = v84[3 + 0];
									v76 = v76 + (1 - (1016 - (10 + 1006)));
									v84 = v72[v76];
									v82[v84[1 + 1]] = v84[1 + 2];
								else
									local v500 = 901 - (652 + 249);
									while true do
										if ((1896 <= 2815) and (v500 == (10 - 6))) then
											v76 = v76 + 1;
											v84 = v72[v76];
											do
												return;
											end
											break;
										end
										if ((v500 == ((262 + 1606) - (708 + 1160))) or (2058 == 2348)) then
											v82[v84[2]] = v63[v84[8 - 5]];
											v76 = v76 + (1 - 0);
											v84 = v72[v76];
											v82[v84[29 - (10 + 17)]] = v82[v84[1 + 2]][v84[1736 - (1400 + 332)]];
											v500 = 1;
										end
										if (v500 == (3 - 1)) then
											v84 = v72[v76];
											v82[v84[1910 - (242 + 1666)]] = v82[v84[2 + 1]][v84[2 + 2]];
											v76 = v76 + 1 + 0;
											v84 = v72[v76];
											v500 = 943 - (850 + 90);
										end
										if (v500 == (4 - 1)) then
											v82[v84[2]] = v82[v84[1393 - (360 + 1030)]][v84[4 + 0]];
											v76 = v76 + (2 - 1);
											v84 = v72[v76];
											v82[v84[2 - 0]][v84[(5394 - 3730) - (909 + 752)]] = v82[v84[4]];
											v500 = 1227 - (109 + 1114);
										end
										if ((v500 == 1) or (3529 <= 1759)) then
											v76 = v76 + (1 - 0);
											v84 = v72[v76];
											v82[v84[1 + 1]] = v82[v84[(1278 - (912 + 121)) - (6 + 236)]][v84[3 + 1]];
											v76 = v76 + 1 + 0;
											v500 = 4 - 2;
										end
									end
								end
							elseif (v85 <= (88 - 37)) then
								if (v85 == (1183 - (509 + 567 + (1346 - (1140 + 149))))) then
									local v501 = 0;
									local v502;
									local v503;
									local v504;
									while true do
										if ((1 + 0) == v501) then
											v504 = v84[3];
											for v1142 = 690 - (579 + 110), v504 do
												v503[v1142] = v82[v502 + v1142];
											end
											break;
										end
										if (v501 == (0 + 0)) then
											v502 = v84[2 + 0 + 0];
											v503 = v82[v502];
											v501 = 1;
										end
									end
								else
									v82[v84[(2 - 0) + 0]] = v84[410 - (174 + 233)] ~= 0;
								end
							elseif ((v85 <= 52) or (358 == 1881)) then
								local v506 = 0 - 0;
								local v507;
								local v508;
								while true do
									if (v506 == 3) then
										v82[v508] = v507[v84[6 - 2]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v506 = 4;
									end
									if ((v506 == (1174 - (663 + 511))) or (2003 == 2771)) then
										v507 = nil;
										v508 = nil;
										v508 = v84[2 + 0];
										v506 = 1;
									end
									if (v506 == (2 + 1 + 3)) then
										v82[v84[5 - 3]] = v84[2 + 1];
										v76 = v76 + ((6 - 4) - 1);
										v84 = v72[v76];
										v506 = 16 - 9;
									end
									if ((v506 == (1 + 0)) or (2599 < 2368)) then
										v82[v508](v13(v82, v508 + 1, v84[3]));
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v506 = (3 - 1) + 0;
									end
									if (v506 == 4) then
										v82[v84[1 + 1]] = v84[3];
										v76 = v76 + (723 - (478 + 244));
										v84 = v72[v76];
										v506 = 5;
									end
									if ((2757 >= 2090) and (v506 == (524 - (440 + 77)))) then
										v82[v84[1 + 0 + 1]] = v84[(34 - 24) - 7];
										break;
									end
									if ((726 < 1551) and (v506 == ((1747 - (165 + 21)) - (655 + 901)))) then
										v82[v84[(112 - (61 + 50)) + 1]] = v84[3 + 0 + 0];
										v76 = v76 + 1 + (0 - 0);
										v84 = v72[v76];
										v506 = (48 - 24) - 18;
									end
									if ((2388 >= 1946) and ((1447 - (695 + 750)) == v506)) then
										v508 = v84[6 - 4];
										v507 = v82[v84[3 - 0]];
										v82[v508 + (3 - 2)] = v507;
										v506 = 354 - (285 + 66);
									end
								end
							elseif (v85 > (123 - (28 + 42))) then
								v82[v84[2]] = v82[v84[1313 - (682 + 628)]][v84[1 + 3]];
							else
								v82[v84[2]] = v84[302 - (176 + (1583 - (1295 + 165)))];
							end
						elseif (v85 <= (27 + 36)) then
							if (v85 <= 58) then
								if ((v85 <= (41 + 15)) or (4771 == 3240)) then
									if (v85 == 55) then
										local v509 = 269 - (239 + 30);
										local v510;
										local v511;
										while true do
											if (((3 + 7) == v509) or (1882 <= 98)) then
												v76 = v84[3];
												break;
											end
											if ((4298 > 4297) and (v509 == (2 + 1 + 6))) then
												v82[v511](v82[v511 + 1 + 0]);
												v76 = v76 + 1;
												v84 = v72[v76];
												v82[v84[2]] = v84[3];
												v76 = v76 + 1;
												v84 = v72[v76];
												v509 = 17 - 7;
											end
											if ((2202 < 4968) and (v509 == (21 - 14))) then
												v76 = v76 + 1;
												v84 = v72[v76];
												v82[v84[1399 - (819 + 578)]] = v82[v84[318 - (306 + 9)]][v84[13 - (1411 - (331 + 1071))]];
												v76 = v76 + 1 + 0;
												v84 = v72[v76];
												v511 = v84[2 + 0];
												v509 = 8;
											end
											if ((388 >= 167) and (v509 == 3)) then
												v511 = v84[1 + 1];
												v510 = v82[v84[8 - 5]];
												v82[v511 + 1] = v510;
												v82[v511] = v510[v84[1379 - (1140 + (978 - (588 + 155)))]];
												v76 = v76 + 1 + 0;
												v84 = v72[v76];
												v509 = 4 + 0;
											end
											if (v509 == (2 + (1286 - (546 + 736)))) then
												v84 = v72[v76];
												v82[v84[54 - (33 + 19)]] = v84[2 + 1];
												v76 = v76 + (2 - 1);
												v84 = v72[v76];
												v511 = v84[1 + 1];
												v82[v511] = v82[v511](v13(v82, v511 + (1 - (1937 - (1834 + 103))), v84[3 + 0]));
												v509 = 696 - (586 + 103);
											end
											if (v509 == (1 + 0)) then
												v76 = v76 + (2 - 1);
												v84 = v72[v76];
												v82[v84[1490 - (806 + 503 + 179)]] = v84[5 - 2];
												v76 = v76 + (2 - 1) + 0;
												v84 = v72[v76];
												v511 = v84[5 - 3];
												v509 = (1768 - (1536 + 230)) + (491 - (128 + 363));
											end
											if (v509 == (0 - 0)) then
												v510 = nil;
												v511 = nil;
												v511 = v84[3 - 1];
												v510 = v82[v84[612 - (295 + 314)]];
												v82[v511 + (2 - 1)] = v510;
												v82[v511] = v510[v84[1966 - (1300 + 662)]];
												v509 = 3 - 2;
											end
											if (v509 == (1763 - (1178 + 123 + 454))) then
												v510 = v82[v84[3]];
												v82[v511 + 1] = v510;
												v82[v511] = v510[v84[3 + 1]];
												v76 = v76 + (2 - 1);
												v84 = v72[v76];
												v511 = v84[(3500 - 2093) - (220 + 631 + 554)];
												v509 = 9;
											end
											if (v509 == 5) then
												v84 = v72[v76];
												v511 = v84[2];
												v510 = v82[v84[(4 - 1) + 0]];
												v82[v511 + (2 - 1)] = v510;
												v82[v511] = v510[v84[4]];
												v76 = v76 + 1;
												v509 = 12 - 6;
											end
											if (v509 == (306 - (115 + 187))) then
												v511 = v84[2 + 0];
												v82[v511](v82[v511 + 1 + 0]);
												v76 = v76 + (3 - 2);
												v84 = v72[v76];
												v82[v84[1163 - (160 + 1001)]] = v63[v84[3 + 0]];
												v76 = v76 + 1 + 0;
												v509 = 10 - 5;
											end
											if ((v509 == (360 - (237 + (356 - 235)))) or (655 == 3201)) then
												v82[v511] = v82[v511](v13(v82, v511 + (898 - (525 + 372)), v84[4 - 1]));
												v76 = v76 + (3 - (4 - 2));
												v84 = v72[v76];
												v82[v84[144 - (96 + 46)]] = v82[v84[780 - (442 + 201 + 134)]][v84[2 + 2]];
												v76 = v76 + 1;
												v84 = v72[v76];
												v509 = 3;
											end
										end
									else
										local v512 = 0 - 0;
										local v513;
										local v514;
										while true do
											if ((3611 >= 958) and (v512 == (7 - 5))) then
												v82[v514] = v513[v84[4]];
												v76 = v76 + 1;
												v84 = v72[v76];
												v82[v84[2 + 0]] = v84[3];
												v512 = 3;
											end
											if ((3619 == 3619) and (v512 == (7 - 3))) then
												v76 = v76 + 1;
												v84 = v72[v76];
												v82[v84[2]] = v82[v84[5 - 2]][v84[723 - (316 + 403)]];
												v76 = v76 + 1 + (1009 - (615 + 394));
												v512 = 13 - 8;
											end
											if (v512 == 1) then
												v84 = v72[v76];
												v514 = v84[1 + 1];
												v513 = v82[v84[7 - 4]];
												v82[v514 + 1 + 0 + 0] = v513;
												v512 = 1 + 1 + 0;
											end
											if ((3817 >= 1959) and (v512 == 3)) then
												v76 = v76 + (3 - 2);
												v84 = v72[v76];
												v514 = v84[2];
												v82[v514] = v82[v514](v13(v82, v514 + (4 - 3), v84[5 - 2]));
												v512 = 4;
											end
											if ((v512 == 8) or (2952 > 3799)) then
												v76 = v76 + 1;
												v84 = v72[v76];
												do
													return;
												end
												break;
											end
											if (v512 == (1 + 5)) then
												v82[v514] = v513[v84[4]];
												v76 = v76 + (1 - 0);
												v84 = v72[v76];
												v514 = v84[1 + 1];
												v512 = 20 - 13;
											end
											if (((51 - 34) - (12 + 5)) == v512) then
												v513 = nil;
												v514 = nil;
												v82[v84[2]] = v63[v84[(49 - 38) - 8]];
												v76 = v76 + (1 - (651 - (59 + 592)));
												v512 = 1 - 0;
											end
											if ((176 <= 1657) and ((16 - 9) == v512)) then
												v82[v514] = v82[v514](v82[v514 + 1 + 0]);
												v76 = v76 + 1;
												v84 = v72[v76];
												v82[v84[1975 - (1656 + (701 - 384))]] = v82[v84[3 + 0]];
												v512 = 7 + 1;
											end
											if ((v512 == 5) or (1616 >= 4086)) then
												v84 = v72[v76];
												v514 = v84[4 - (3 - 1)];
												v513 = v82[v84[14 - 11]];
												v82[v514 + 1] = v513;
												v512 = 360 - (5 + 349);
											end
										end
									end
								elseif (v85 > (270 - 213)) then
									do
										return;
									end
								else
									local v515;
									local v516;
									v516 = v84[1273 - (266 + 1005)];
									v515 = v82[v84[3]];
									v82[v516 + 1 + 0] = v515;
									v82[v516] = v515[v84[13 - 9]];
									v76 = v76 + (1 - (0 + 0));
									v84 = v72[v76];
									v82[v84[2]] = v84[1699 - (561 + 1135)];
									v76 = v76 + 1;
									v84 = v72[v76];
									v516 = v84[2 - 0];
									v82[v516] = v82[v516](v13(v82, v516 + (3 - 2), v84[3]));
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[1068 - (507 + 559)]] = v82[v84[7 - 4]][v84[12 - 8]];
									v76 = v76 + (389 - (212 + 176));
									v84 = v72[v76];
									v516 = v84[907 - (250 + 655)];
									v515 = v82[v84[8 - 5]];
									v82[v516 + 1] = v515;
									v82[v516] = v515[v84[6 - 2]];
									v76 = v76 + (1 - (171 - (70 + 101)));
									v84 = v72[v76];
									v516 = v84[1958 - (1869 + 87)];
									v82[v516](v82[v516 + 1]);
									v76 = v76 + (3 - 2);
									v84 = v72[v76];
									v82[v84[1903 - (484 + 1417)]] = v63[v84[6 - 3]];
									v76 = v76 + ((2 - 1) - 0);
									v84 = v72[v76];
									v516 = v84[775 - (48 + 725)];
									v515 = v82[v84[4 - 1]];
									v82[v516 + (2 - 1)] = v515;
									v82[v516] = v515[v84[4]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[4 - 2]] = v84[1 + 2 + 0];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v516 = v84[(2147 - 1292) - (152 + (942 - (123 + 118)))];
									v82[v516] = v82[v516](v13(v82, v516 + (1312 - (430 + 214 + 667)), v84[2 + 1]));
									v76 = v76 + (896 - (557 + 5 + 333));
									v84 = v72[v76];
									v82[v84[1 + 1]] = v82[v84[(1407 - (653 + 746)) - 5]][v84[4]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v516 = v84[6 - 4];
									v515 = v82[v84[7 - (7 - 3)]];
									v82[v516 + (2 - 1)] = v515;
									v82[v516] = v515[v84[4]];
									v76 = v76 + (802 - (499 + 302));
									v84 = v72[v76];
									v516 = v84[868 - (39 + (1190 - 363))];
									v82[v516](v82[v516 + (2 - 1)]);
									v76 = v76 + ((5 - 3) - 1);
									v84 = v72[v76];
									v76 = v84[3];
								end
							elseif (v85 <= (238 - 178)) then
								if (v85 > 59) then
									local v548;
									local v549;
									v82[v84[2 - 0]] = v63[v84[1 + 2]];
									v76 = v76 + (2 - (1 + 0));
									v84 = v72[v76];
									v549 = v84[2];
									v548 = v82[v84[3]];
									v82[v549 + 1 + 0 + 0] = v548;
									v82[v549] = v548[v84[5 - (1 + 0)]];
									v76 = v76 + (105 - (103 + 1));
									v84 = v72[v76];
									v82[v84[556 - (475 + 79)]] = v84[6 - 3];
									v76 = v76 + (3 - 2);
									v84 = v72[v76];
									v549 = v84[2];
									v82[v549] = v82[v549](v13(v82, v549 + 1 + 0, v84[3]));
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[1 + 1 + 0]] = v82[v84[1506 - (1395 + 108)]][v84[4]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v549 = v84[5 - 3];
									v548 = v82[v84[1207 - (7 + 1197)]];
									v82[v549 + 1 + 0] = v548;
									v82[v549] = v548[v84[1 + 1 + 2]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v549 = v84[321 - (27 + 292)];
									v82[v549] = v82[v549](v82[v549 + (2 - 1)]);
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[2 - (0 - 0)]] = v82[v84[12 - (9 + 0)]];
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									do
										return;
									end
								else
									v82[v84[3 - 1]][v84[142 - (43 + 96)]] = v84[4];
								end
							elseif (v85 <= (248 - 187)) then
								local v571;
								local v572;
								v572 = v84[3 - 1];
								v571 = v82[v84[3 + 0]];
								v82[v572 + (1 - 0) + (1234 - (885 + 349))] = v571;
								v82[v572] = v571[v84[7 - 3]];
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[2]] = v84[2 + 1];
								v76 = v76 + 1;
								v84 = v72[v76];
								v572 = v84[2];
								v82[v572] = v82[v572](v13(v82, v572 + (1 - 0), v84[1 + 0 + 2]));
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[1 + 1]] = v82[v84[1754 - (1414 + 337)]][v84[(5301 - 3357) - (1642 + 298)]];
								v76 = v76 + (2 - 1);
								v84 = v72[v76];
								v572 = v84[(14 - 9) - 3];
								v571 = v82[v84[8 - 5]];
								v82[v572 + 1 + 0] = v571;
								v82[v572] = v571[v84[4 + 0]];
								v76 = v76 + (973 - (357 + 615));
								v84 = v72[v76];
								v572 = v84[2 + 0];
								v82[v572](v82[v572 + (2 - 1)]);
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[2]] = v63[v84[(971 - (915 + 53)) + 0]];
								v76 = v76 + (2 - 1);
								v84 = v72[v76];
								v82[v84[2]] = v84[3 + 0];
								v76 = v76 + 1 + 0;
								v84 = v72[v76];
								v572 = v84[(803 - (768 + 33)) + 0];
								v82[v572](v82[v572 + 1]);
								v76 = v76 + (1302 - (384 + 917));
								v84 = v72[v76];
								v76 = v84[700 - (128 + (2178 - 1609))];
							elseif (v85 == 62) then
								local v726;
								local v727;
								v82[v84[2]] = v63[v84[3]];
								v76 = v76 + ((2717 - 1173) - (1407 + 136));
								v84 = v72[v76];
								v727 = v84[1889 - (687 + 1200)];
								v726 = v82[v84[1713 - (556 + 1154)]];
								v82[v727 + ((331 - (287 + 41)) - 2)] = v726;
								v82[v727] = v726[v84[99 - (9 + 86)]];
								v76 = v76 + (422 - (275 + 146));
								v84 = v72[v76];
								v82[v84[1 + 1]] = v84[(914 - (638 + 209)) - (29 + 35)];
								v76 = v76 + (4 - (2 + 1));
								v84 = v72[v76];
								v727 = v84[1688 - (96 + 1590)];
								v82[v727] = v82[v727](v13(v82, v727 + (2 - 1), v84[3]));
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[8 - 6]] = v82[v84[2 + 1]][v84[4]];
								v76 = v76 + (1013 - (53 + 959));
								v84 = v72[v76];
								v727 = v84[1674 - (741 + 931)];
								v726 = v82[v84[411 - (312 + 96)]];
								v82[v727 + ((1 + 0) - 0)] = v726;
								v82[v727] = v726[v84[289 - (147 + 138)]];
								v76 = v76 + (900 - (813 + 86));
								v84 = v72[v76];
								v727 = v84[2];
								v82[v727] = v82[v727](v82[v727 + 1 + 0]);
								v76 = v76 + (1 - 0);
								v84 = v72[v76];
								v82[v84[494 - (18 + 474)]] = v82[v84[2 + 1]];
								v76 = v76 + (3 - 2);
								v84 = v72[v76];
								do
									return;
								end
							else
								local v748 = v84[2];
								local v749 = {v82[v748](v82[v748 + (1087 - (860 + 226))])};
								local v750 = 303 - (121 + 182);
								for v1064 = v748, v84[(2 - 1) + 3] do
									v750 = v750 + (1241 - (988 + 252));
									v82[v1064] = v749[v750];
								end
							end
						elseif (v85 <= (8 + 60)) then
							if (v85 <= (303 - 238)) then
								if (v85 > 64) then
									local v593 = 0 + 0;
									local v594;
									local v595;
									while true do
										if ((2650 >= 1576) and (v593 == (1970 - (49 + 1921)))) then
											v594 = v84[(383 + 509) - (223 + 667)];
											v595 = v82[v594];
											v593 = 53 - (22 + 29 + 1);
										end
										if (v593 == (1 - 0)) then
											for v1145 = v594 + (1 - 0), v84[1128 - (146 + 979)] do
												v7(v595, v82[v1145]);
											end
											break;
										end
									end
								else
									local v596 = 0 + 0;
									local v597;
									local v598;
									while true do
										if (v596 == (610 - (311 + 294))) then
											v84 = v72[v76];
											v82[v84[5 - 3]] = v84[2 + 1];
											v76 = v76 + (1444 - (496 + 947));
											v84 = v72[v76];
											v596 = 1364 - (393 + 840 + 125);
										end
										if (v596 == (5 + 5)) then
											v84 = v72[v76];
											v598 = v84[2 + 0];
											v597 = v82[v84[1 + 2]];
											v82[v598 + (1646 - (963 + 682))] = v597;
											v596 = 10 + 1;
										end
										if ((317 < 3696) and (v596 == 0)) then
											v597 = nil;
											v598 = nil;
											v598 = v84[1506 - (504 + 1000)];
											v597 = v82[v84[3 + 0]];
											v596 = 1 + 0;
										end
										if ((3384 == 3384) and (v596 == (1 + 2))) then
											v82[v598] = v82[v598](v13(v82, v598 + (1 - 0), v84[3 + 0]));
											v76 = v76 + (3 - 2) + 0;
											v84 = v72[v76];
											v598 = v84[184 - (156 + 26)];
											v596 = 3 + 1;
										end
										if (v596 == (13 - 4)) then
											v84 = v72[v76];
											v598 = v84[2];
											v82[v598] = v82[v598](v13(v82, v598 + (165 - (149 + 15)), v84[963 - (890 + 70)]));
											v76 = v76 + (118 - (39 + 78));
											v596 = 10;
										end
										if ((v596 == 11) or (3727 < 2142)) then
											v82[v598] = v597[v84[(158 + 328) - (14 + 229 + 239)]];
											break;
										end
										if (v596 == 8) then
											v76 = v76 + (2 - 1);
											v84 = v72[v76];
											v82[v84[5 - 3]] = v84[2 + 1];
											v76 = v76 + 1 + 0;
											v596 = 9;
										end
										if (v596 == (1 + 1)) then
											v82[v84[1 + 1]] = v84[3];
											v76 = v76 + 1 + 0;
											v84 = v72[v76];
											v598 = v84[(12 - 9) - (1 + 0)];
											v596 = 3;
										end
										if (v596 == ((495 - (64 + 430)) + 0)) then
											v82[v598 + 1] = v597;
											v82[v598] = v597[v84[13 - 9]];
											v76 = v76 + 1 + 0;
											v84 = v72[v76];
											v596 = 53 - (12 + 39);
										end
										if (v596 == (6 + 0)) then
											v598 = v84[2];
											v82[v598] = v82[v598](v13(v82, v598 + (2 - 1), v84[3]));
											v76 = v76 + (3 - 2);
											v84 = v72[v76];
											v596 = 3 + 4;
										end
										if (v596 == (4 + 3)) then
											v598 = v84[2 + 0];
											v597 = v82[v84[(370 - (106 + 257)) - 4]];
											v82[v598 + 1 + 0 + 0] = v597;
											v82[v598] = v597[v84[19 - 15]];
											v596 = 1718 - (1596 + 114);
										end
										if (v596 == ((731 - (496 + 225)) - 6)) then
											v597 = v82[v84[716 - (164 + 549)]];
											v82[v598 + (1439 - (1059 + 379))] = v597;
											v82[v598] = v597[v84[4 - (0 - 0)]];
											v76 = v76 + 1 + 0;
											v596 = 1 + 4;
										end
									end
								end
							elseif (v85 <= 66) then
								local v599 = v84[394 - ((706 - 561) + 247)];
								local v600, v601 = v75(v82[v599](v13(v82, v599 + 1 + 0, v84[3])));
								v77 = (v601 + v599) - (1 + 0);
								local v602 = 0;
								for v651 = v599, v77 do
									v602 = v602 + (2 - 1);
									v82[v651] = v600[v602];
								end
							elseif (v85 > (13 + 54)) then
								local v751;
								local v752;
								v752 = v84[2 + 0];
								v82[v752] = v82[v752](v13(v82, v752 + (1 - (1658 - (256 + 1402))), v84[723 - (254 + 466)]));
								v76 = v76 + 1;
								v84 = v72[v76];
								v752 = v84[2];
								v751 = v82[v84[563 - (544 + 16)]];
								v82[v752 + (2 - 1)] = v751;
								v82[v752] = v751[v84[632 - (294 + 334)]];
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[(2154 - (30 + 1869)) - (236 + (1386 - (213 + 1156)))]] = v84[2 + 1];
								v76 = v76 + 1;
								v84 = v72[v76];
								v752 = v84[2 + 0];
								v82[v752] = v82[v752](v13(v82, v752 + (3 - 2), v84[14 - 11]));
								v76 = v76 + 1 + 0;
								v84 = v72[v76];
								v752 = v84[2 + 0];
								v751 = v82[v84[797 - (413 + 381)]];
								v82[v752 + 1 + 0] = v751;
								v82[v752] = v751[v84[8 - 4]];
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[4 - 2]] = v84[1973 - ((770 - (96 + 92)) + 1388)];
								v76 = v76 + (1 - 0);
								v84 = v72[v76];
								v752 = v84[2];
								v82[v752] = v82[v752](v13(v82, v752 + 1 + 0 + 0, v84[902 - (142 + 757)]));
								v76 = v76 + (365 - (266 + 60 + 38));
								v84 = v72[v76];
								v752 = v84[2];
								v751 = v82[v84[8 - (3 + 2)]];
								v82[v752 + 1] = v751;
								v82[v752] = v751[v84[4]];
								v76 = v76 + (1 - 0);
								v84 = v72[v76];
								v82[v84[622 - (47 + 573)]] = v84[3];
								v76 = v76 + 1 + 0;
								v84 = v72[v76];
								v82[v84[2]] = v84[12 - 9];
							else
								local v774 = (79 - (32 + 47)) - 0;
								local v775;
								local v776;
								while true do
									if (v774 == (1664 - (1269 + 395))) then
										v775 = nil;
										v776 = nil;
										v776 = v84[494 - ((2053 - (1053 + 924)) + 408 + 8)];
										v774 = 444 - (319 + 124);
									end
									if (v774 == ((2 - 0) - 1)) then
										v82[v776](v13(v82, v776 + (1008 - (564 + 443)), v84[7 - 4]));
										v76 = v76 + 1;
										v84 = v72[v76];
										v774 = 460 - (337 + 121);
									end
									if (v774 == (20 - 13)) then
										v82[v84[2]] = v84[9 - 6];
										break;
									end
									if ((1680 < 2583) and (v774 == (1916 - ((2909 - (685 + 963)) + 650)))) then
										v82[v84[1 + 1]] = v84[3 - 0];
										v76 = v76 + (1818 - (772 + 1045));
										v84 = v72[v76];
										v774 = 1 + 5;
									end
									if (v774 == (148 - (102 + 42))) then
										v82[v84[1846 - (1524 + 320)]] = v84[1273 - (1049 + 221)];
										v76 = v76 + 1;
										v84 = v72[v76];
										v774 = 161 - (18 + (280 - 142));
									end
									if (v774 == (14 - 8)) then
										v82[v84[1104 - (67 + 1035)]] = v84[3];
										v76 = v76 + (349 - (136 + 212));
										v84 = v72[v76];
										v774 = 29 - 22;
									end
									if ((2012 < 2160) and (v774 == (3 + (0 - 0)))) then
										v82[v776] = v775[v84[4 + 0]];
										v76 = v76 + (1605 - (240 + (3073 - (541 + 1168))));
										v84 = v72[v76];
										v774 = 1086 - (1050 + (1629 - (645 + 952)));
									end
									if (v774 == (7 - 5)) then
										v776 = v84[840 - (669 + 169)];
										v775 = v82[v84[2 + 1]];
										v82[v776 + (1056 - (331 + 724))] = v775;
										v774 = 1 + (6 - 4);
									end
								end
							end
						elseif (v85 <= (714 - (269 + 375))) then
							if ((v85 > (794 - (267 + 458))) or (2342 == 3691)) then
								local v603 = 0;
								local v604;
								while true do
									if (v603 == (0 + 0)) then
										v604 = v84[3 - 1];
										v82[v604](v13(v82, v604 + (819 - (667 + 151)), v84[1500 - (1410 + 87)]));
										break;
									end
								end
							else
								local v605 = 0;
								local v606;
								local v607;
								while true do
									if (v605 == 3) then
										v76 = v76 + (1898 - (1504 + 393));
										v84 = v72[v76];
										v607 = v84[5 - 3];
										v82[v607] = v82[v607](v13(v82, v607 + (1 - 0), v84[3]));
										v605 = 10 - 6;
									end
									if ((v605 == (798 - (461 + 335))) or (4786 <= 238)) then
										v82[v607] = v606[v84[1 + 2 + 1]];
										v76 = v76 + (1762 - (1730 + 31));
										v84 = v72[v76];
										v82[v84[2]] = v84[1670 - (728 + 939)];
										v605 = 3;
									end
									if ((21 - 15) == v605) then
										if ((3450 <= 4563) and (v82[v84[3 - 1]] ~= v82[v84[9 - 5]])) then
											v76 = v76 + (1069 - (138 + 930));
										else
											v76 = v84[3 + 0];
										end
										break;
									end
									if ((262 <= 3156) and (v605 == (4 + 1))) then
										v84 = v72[v76];
										v82[v84[2]] = v82[v84[3]][v84[4 + 0]];
										v76 = v76 + (4 - 3);
										v84 = v72[v76];
										v605 = (391 + 1381) - (459 + 1307);
									end
									if ((2384 < 4082) and (v605 == 0)) then
										v606 = nil;
										v607 = nil;
										v82[v84[1872 - (474 + 1396)]] = v63[v84[3]];
										v76 = v76 + ((766 - (181 + 584)) - 0);
										v605 = 1 + 0;
									end
									if (v605 == (1 + 3)) then
										v76 = v76 + (2 - 1);
										v84 = v72[v76];
										v82[v84[1 + 1]] = v82[v84[(1404 - (665 + 730)) - 6]][v84[17 - 13]];
										v76 = v76 + (592 - (562 + 29));
										v605 = 5 + (0 - 0);
									end
									if (v605 == (1420 - (374 + 1045))) then
										v84 = v72[v76];
										v607 = v84[2 + 0];
										v606 = v82[v84[9 - 6]];
										v82[v607 + (639 - (448 + 190))] = v606;
										v605 = 1 + 1;
									end
								end
							end
						elseif ((v85 <= (33 + 38)) or (3857 < 2167)) then
							local v608;
							v82[v84[2]] = v82[v84[(3 - 1) + 1]][v84[4]];
							v76 = v76 + (3 - 2);
							v84 = v72[v76];
							v82[v84[5 - 3]] = v82[v84[3]][v84[1498 - (1307 + (1537 - (540 + 810)))]];
							v76 = v76 + (3 - 2);
							v84 = v72[v76];
							v82[v84[4 - 2]] = v63[v84[8 - 5]];
							v76 = v76 + ((2734 - 2050) - (232 + 451));
							v84 = v72[v76];
							v82[v84[(5 - 3) + 0]] = v82[v84[3 + 0]][v84[568 - (510 + 54)]];
							v76 = v76 + (1 - (0 + 0));
							v84 = v72[v76];
							v82[v84[38 - ((216 - (166 + 37)) + 23)]] = v84[3];
							v76 = v76 + (1 - 0);
							v84 = v72[v76];
							v608 = v84[(1883 - (22 + 1859)) - 0];
							v82[v608] = v82[v608](v82[v608 + 1]);
							v76 = v76 + ((1773 - (843 + 929)) - 0);
							v84 = v72[v76];
							v82[v84[1090 - ((1092 - (30 + 232)) + 258)]][v84[10 - 7]] = v82[v84[(8 - 5) + 1]];
							v76 = v76 + 1 + 0;
							v84 = v72[v76];
							v82[v84[1443 - (860 + 581)]] = v62[v84[10 - (784 - (55 + 722))]];
							v76 = v76 + 1;
							v84 = v72[v76];
							v82[v84[2 + 0]] = v82[v84[244 - (237 + 4)]][v84[9 - 5]];
							v76 = v76 + (2 - 1);
							v84 = v72[v76];
							v82[v84[3 - 1]] = v82[v84[3 + 0]][v84[3 + 1]];
							v76 = v76 + (3 - 2);
							v84 = v72[v76];
							v82[v84[2]][v84[3]] = v84[2 + 2];
							v76 = v76 + 1 + 0;
							v84 = v72[v76];
							v82[v84[2]] = v84[1429 - (85 + 1341)];
						elseif (v85 == (122 - 50)) then
							local v777;
							local v778;
							v82[v84[5 - 3]] = v63[v84[375 - (45 + 327)]];
							v76 = v76 + (1 - (0 - 0));
							v84 = v72[v76];
							v778 = v84[504 - ((2119 - (78 + 1597)) + 58)];
							v777 = v82[v84[1 + 1 + 1]];
							v82[v778 + 1 + 0 + 0] = v777;
							v82[v778] = v777[v84[4]];
							v76 = v76 + 1 + 0;
							v84 = v72[v76];
							v82[v84[2]] = v84[8 - 5];
							v76 = v76 + 1 + 0;
							v84 = v72[v76];
							v778 = v84[551 - (305 + 244)];
							v82[v778] = v82[v778](v13(v82, v778 + 1, v84[1735 - (64 + 1668)]));
							v76 = v76 + (1974 - (1227 + 746));
							v84 = v72[v76];
							v82[v84[5 - 3]] = v82[v84[5 - 2]][v84[498 - (415 + 79)]];
							v76 = v76 + 1 + 0;
							v84 = v72[v76];
							v778 = v84[2];
							v777 = v82[v84[3]];
							v82[v778 + 1 + 0] = v777;
							v82[v778] = v777[v84[495 - (142 + 349)]];
							v76 = v76 + 1 + 0;
							v84 = v72[v76];
							v778 = v84[2 - 0];
							v82[v778] = v82[v778](v82[v778 + 1 + 0]);
							v76 = v76 + 1 + 0;
							v84 = v72[v76];
							v82[v84[2]] = v82[v84[3]];
							v76 = v76 + (2 - 1);
							v84 = v72[v76];
							do
								return;
							end
						else
							local v796;
							local v797;
							v797 = v84[1866 - (1710 + 154)];
							v82[v797](v13(v82, v797 + (319 - (200 + 118)), v84[2 + 1]));
							v76 = v76 + (1 - 0);
							v84 = v72[v76];
							v797 = v84[2];
							v796 = v82[v84[4 - 1]];
							v82[v797 + 1 + 0] = v796;
							v82[v797] = v796[v84[4 + (105 - (95 + 10))]];
							v76 = v76 + 1;
							v84 = v72[v76];
							v82[v84[2]] = v84[2 + 1];
							v76 = v76 + 1 + 0;
							v84 = v72[v76];
							v82[v84[2]] = v84[3];
							v76 = v76 + (2 - 1);
							v84 = v72[v76];
							v82[v84[2]] = v84[1253 - (363 + 629 + 258)];
							v76 = v76 + 1;
							v84 = v72[v76];
							v82[v84[(6 - 4) - 0]] = v84[14 - 11];
						end
						v76 = v76 + 1 + 0;
						break;
					end
				end
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);